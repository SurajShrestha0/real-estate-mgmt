{"version":3,"file":"magicbell-magicbell-react.esm.min.js","sources":["../src/context/MagicBellContext.ts","../src/lib/color.ts","../src/lib/merge.ts","../src/themes/light.ts","../src/context/Theme.ts","../src/context/MagicBellThemeContext.tsx","../src/components/Styled/cleanslate.tsx","../src/components/Badge/Badge.tsx","../src/components/Bell/BellBadge.tsx","../src/components/Bell/BellIcon.tsx","../src/components/Bell/Bell.tsx","../src/components/Bell/ClassicBellIcon.tsx","../src/context/TranslationsContext.ts","../src/lib/window.ts","../src/components/Text/Text.tsx","../src/components/UserPreferencesPanel/CloseIcon.tsx","../src/components/EnablePushNotificationsBanner/CloseBannerButton.tsx","../src/components/EnablePushNotificationsBanner/EnablePushNotificationsButton.tsx","../src/components/EnablePushNotificationsBanner/EnablePushNotificationsBanner.tsx","../src/components/Footer/MagicBellLogo.tsx","../src/components/Footer/FooterLogo.tsx","../src/components/Footer/StyledFooter.tsx","../src/components/Footer/Footer.tsx","../src/components/icons/SettingsIcon.tsx","../src/components/Header/StyledHeader.tsx","../src/components/Header/Header.tsx","../src/components/Tabs/Tabs.tsx","../src/components/Header/HeaderTabs.tsx","../src/components/Popover/Popover.tsx","../src/components/Tooltip/Tooltip.tsx","../src/components/IconButton/IconButton.tsx","../src/components/icons/CheckMarkIcon.tsx","../src/components/NotificationInbox/ClearInboxMessage.tsx","../src/components/NotificationInbox/Layout.tsx","../src/components/ClickableNotification/prose.ts","../src/components/NotificationContent/NotificationContent.tsx","../src/components/icons/MenuIcon.tsx","../src/components/NotificationContextMenu/NotificationContextMenu.tsx","../src/components/NotificationMenu/NotificationMenu.tsx","../src/components/icons/DotIcon.tsx","../src/components/NotificationState/NotificationState.tsx","../src/lib/date.ts","../src/components/Timestamp/Timestamp.tsx","../src/components/ClickableNotification/eventHandlers.ts","../src/components/ClickableNotification/NotificationTitle.tsx","../src/components/ClickableNotification/StyledContainer.tsx","../src/components/ClickableNotification/ClickableNotification.tsx","../src/components/NotificationList/Loader.tsx","../src/components/NotificationList/NotificationList.tsx","../src/components/NotificationInbox/NotificationInboxContent.tsx","../src/components/NotificationInbox/private/NotificationsView.tsx","../src/components/UserPreferencesPanel/ToggleInput.tsx","../src/components/UserPreferencesPanel/CategoryPreferences.tsx","../src/components/UserPreferencesPanel/PreferencesCategories.tsx","../src/components/NotificationInbox/private/PreferencesView.tsx","../src/components/NotificationInbox/useContainerBorderRadius.ts","../src/components/NotificationInbox/StyledContainer.tsx","../src/components/NotificationInbox/NotificationInbox.tsx","../src/components/FloatingNotificationInbox/Arrow.tsx","../src/components/FloatingNotificationInbox/StyledPopoverContainer.tsx","../src/components/FloatingNotificationInbox/FloatingInboxContainer.tsx","../src/components/FloatingNotificationInbox/FloatingNotificationInbox.tsx","../src/context/CurrentProviderContext.ts","../src/lib/translations/de.ts","../src/lib/translations/es.ts","../src/lib/translations/pt-br.ts","../src/lib/i18n.ts","../src/components/MagicBellProvider/MagicBellProvider.tsx","../src/components/MagicBellProvider/MagicBellChildrenWrapper.tsx","../src/components/MagicBell/MagicBell.tsx","../src/components/PushNotificationsSubscriber/PushNotificationsSubscriber.tsx","../src/themes/classic.ts","../src/themes/flat.ts"],"sourcesContent":["import { createContext, useContext } from 'react';\n\nexport interface IMagicBellContext {\n  images?: Partial<{\n    emptyInboxUrl: string;\n  }>;\n  isFetchingConfig: boolean;\n}\n\nconst MagicBellContext = createContext<IMagicBellContext>({} as IMagicBellContext);\nexport default MagicBellContext;\n\nconst useMagicBellContext = () => useContext(MagicBellContext);\nexport { useMagicBellContext };\n","import tinycolor from 'tinycolor2';\n\n/**\n * Function that takes a valid CSS color and adds some opacity to it.\n *\n * @param baseColor Color in HSL, HSV, HEX or RGB\n * @param alpha Alpha for this color\n */\nexport function toRGBA(baseColor: string, alpha: number) {\n  // tinycolor doesn't support css variables, so assume the variable is correct as is\n  if (baseColor.startsWith('var(')) return baseColor; \n  const color = tinycolor(baseColor);\n  color.setAlpha(alpha);\n\n  return color.toRgbString();\n}\n\n/**\n * Function that takes a valid CSS color and mixes it with black.\n *\n * @param baseColor Color in HSL, HSV, HEX or RGB\n * @param amount Amount of black to mix with the base color.\n */\nexport function darken(baseColor: string, amount?: number) {\n  return tinycolor.mix(baseColor, 'black', amount || 50).toRgbString();\n}\n","import { compose, filter, isNil, mergeDeepRight, not, pipe, reduce, unapply } from 'ramda';\n\nexport const merge = unapply(pipe(filter(compose(not, isNil)), reduce(mergeDeepRight, {})));\n","import { IMagicBellTheme } from '../context/Theme';\n\nexport const fonts = {\n  sans: `Inter, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif, -apple-system, system`,\n  mono: `ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace`,\n};\n\nconst colors = {\n  bg: '#FFFFFF',\n  caption: '#181B20',\n  text: '#3A424D',\n  ghost: '#6E7D91',\n  stroke: '#EFEEF1',\n  accent: '#5225C1',\n  badge: '#F80808',\n  bgHighlight: '#F8F5FF',\n  bgActive: '#F2EDFC',\n  transparent: 'transparent',\n};\n\nconst prose: IMagicBellTheme['prose'] = {\n  headings: colors.caption,\n  links: colors.caption,\n  bold: colors.caption,\n  hr: colors.stroke,\n  quotes: colors.text,\n  quoteBorders: colors.stroke,\n  captions: colors.caption,\n  code: colors.text,\n  preCode: colors.stroke,\n  preBg: colors.text,\n  thBorders: colors.stroke,\n  tdBorders: colors.stroke,\n  buttonBorders: colors.text,\n  buttons: colors.caption,\n  fontMono: fonts.mono,\n};\n\nconst icon: IMagicBellTheme['icon'] = {\n  borderColor: colors.accent,\n  width: '24px',\n};\n\nconst tabs: IMagicBellTheme['tabs'] = {\n  margin: '-8px 0 -16px 0',\n  spacing: '4px',\n  fontSize: '12px',\n  fontWeight: 500,\n  color: colors.ghost,\n  activeColor: colors.accent,\n};\n\nconst header: IMagicBellTheme['header'] = {\n  backgroundColor: colors.bg,\n  backgroundOpacity: 1,\n  borderRadius: '16px',\n  fontFamily: fonts.sans,\n  fontSize: '15px',\n  fontWeight: 400,\n  textAlign: 'left',\n  textColor: colors.accent,\n  textTransform: 'none',\n  padding: '16px',\n  borderColor: colors.stroke,\n};\n\nconst footer: IMagicBellTheme['footer'] = {\n  ...header,\n  fontSize: '12px', // set for backward compatibility\n  padding: '8px 16px',\n};\n\nconst banner: IMagicBellTheme['banner'] = {\n  backgroundColor: colors.bgHighlight,\n  backgroundOpacity: 1,\n  textColor: colors.text,\n  fontFamily: fonts.sans,\n  textAlign: 'left',\n  fontSize: '12px',\n  boxShadow: `inset 0 1px 0 0 ${colors.stroke}`,\n};\n\nconst unseenBadge: IMagicBellTheme['unseenBadge'] = {\n  backgroundColor: colors.badge,\n  backgroundOpacity: 1,\n  borderColor: 'white',\n  borderRadius: '4px',\n  fontFamily: fonts.sans,\n  fontWeight: 400,\n  fontSize: '9px',\n  textAlign: 'center',\n  textColor: 'white',\n  textTransform: 'none',\n  padding: '2px 3px',\n};\n\nconst container: IMagicBellTheme['container'] = {\n  backgroundColor: colors.bg,\n  backgroundOpacity: 1,\n  borderRadius: '8px',\n  fontFamily: fonts.sans,\n  fontWeight: 'inherit',\n  fontSize: '16px',\n  textAlign: 'left',\n  textColor: colors.text,\n  textTransform: 'none',\n  boxShadow: '0px 0px 6px rgba(0, 0, 0, 0.08), 0px 5px 12px rgba(0, 0, 0, 0.16)',\n  borderColor: colors.transparent,\n};\n\nconst defaultNotification: IMagicBellTheme['notification']['default'] = {\n  backgroundColor: colors.bg,\n  backgroundOpacity: 1,\n  borderRadius: '16px',\n  fontFamily: fonts.sans,\n  fontSize: '12px',\n  fontWeight: 400,\n  textAlign: 'left',\n  textColor: colors.text,\n  textTransform: 'none',\n  margin: '8px',\n  padding: '16px 8px',\n  title: {\n    fontFamily: 'inherit',\n    fontSize: 'inherit',\n    fontWeight: 600,\n    textColor: colors.caption,\n  },\n  hover: {\n    backgroundColor: colors.bgActive,\n    backgroundOpacity: 1,\n  },\n  state: {\n    color: colors.transparent,\n  },\n};\n\nconst unreadNotification: IMagicBellTheme['notification']['unread'] = {\n  ...defaultNotification,\n  backgroundColor: colors.bgHighlight,\n  hover: {\n    backgroundColor: colors.bgActive,\n    backgroundOpacity: 1,\n  },\n  state: {\n    color: colors.accent,\n  },\n};\n\nconst dialog: IMagicBellTheme['dialog'] = {\n  backgroundColor: colors.bg,\n  textColor: colors.text,\n  accentColor: colors.accent,\n};\n\nexport const lightTheme: IMagicBellTheme = {\n  prose,\n  icon,\n  tabs,\n  header,\n  footer,\n  banner,\n  dialog,\n  unseenBadge,\n  container,\n  notification: {\n    default: defaultNotification,\n    unread: unreadNotification,\n    unseen: unreadNotification,\n  },\n};\n","import { lightTheme } from '../themes/light';\n\nexport interface IElementTheme {\n  backgroundColor: string;\n  backgroundOpacity: number;\n  borderRadius: string;\n  borderColor?: string;\n  fontFamily: string;\n  fontSize: string;\n  textAlign: 'left' | 'right' | 'center' | 'justify' | 'initial' | 'inherit';\n  textColor: string;\n  textTransform: 'none' | 'capitalize' | 'uppercase' | 'lowercase' | 'initial' | 'inherit';\n  padding?: string;\n  fontWeight: string | number;\n}\n\ninterface NotificationTheme extends IElementTheme {\n  margin: string;\n  hover: {\n    backgroundColor: string;\n    backgroundOpacity: number;\n  };\n  title: {\n    fontFamily: string;\n    fontSize: string;\n    fontWeight: string | number;\n    textColor: string;\n  };\n  state: {\n    color: string;\n  };\n}\n\ninterface ProseTheme {\n  headings: string;\n  links: string;\n  bold: string;\n  hr: string;\n  quotes: string;\n  quoteBorders: string;\n  captions: string;\n  code: string;\n  preCode: string;\n  preBg: string;\n  thBorders: string;\n  tdBorders: string;\n  buttonBorders: string;\n  buttons: string;\n  fontMono: string;\n}\n\ninterface TabsTheme {\n  margin: string;\n  spacing: string;\n  fontSize: string;\n  fontWeight: number;\n  color: string;\n  activeColor: string;\n}\n\nexport interface IMagicBellTheme {\n  prose: ProseTheme;\n  icon: {\n    borderColor: string;\n    width: string;\n  };\n  unseenBadge: IElementTheme;\n  tabs: TabsTheme;\n  header: IElementTheme;\n  container: IElementTheme & { boxShadow?: string };\n  footer: IElementTheme;\n  banner: {\n    backgroundColor: string;\n    backgroundOpacity: number;\n    textColor: string;\n    boxShadow: string;\n    fontFamily: string;\n    fontSize: string;\n    textAlign: string;\n  };\n  notification: {\n    default: NotificationTheme;\n    unread: NotificationTheme;\n    unseen: NotificationTheme;\n  };\n  dialog: {\n    backgroundColor: string;\n    textColor: string;\n    accentColor: string;\n  };\n}\n\nexport const defaultTheme: IMagicBellTheme = lightTheme;\n","import React, { createContext, ReactNode, useContext, useMemo } from 'react';\n\nimport { darken } from '../lib/color';\nimport { merge } from '../lib/merge';\nimport { DeepPartial } from '../lib/types';\nimport { defaultTheme, IMagicBellTheme } from './Theme';\n\nconst MagicBellThemeContext = createContext<IMagicBellTheme>(defaultTheme);\n\ntype MagicBellProviderProps = {\n  value: DeepPartial<IMagicBellTheme>;\n  children: ReactNode;\n};\n\nexport function MagicBellThemeProvider({ value: partialTheme = {}, ...props }: MagicBellProviderProps) {\n  const theme = useMemo(() => {\n    // don't run backwards compatibility code if no partial theme was provided\n    if (!partialTheme || Object.keys(partialTheme).length === 0) return defaultTheme;\n\n    const merged = merge(defaultTheme, partialTheme) as IMagicBellTheme;\n\n    // backwards compatibility for prose\n    if (!partialTheme.prose) {\n      for (const key of Object.keys(merged.prose).filter((x) => !/code|pre/i.test(x))) {\n        merged.prose[key] = merged.notification.default.textColor;\n      }\n    }\n\n    // backwards compatibility for notification titles\n    if (!partialTheme.notification?.default?.title?.textColor) {\n      merged.notification.default.title.textColor = merged.notification.default.textColor;\n    }\n\n    // make notification unseen & unread state fallback to custom default state before falling back to default theme\n    for (const variant of ['unseen', 'unread']) {\n      merged.notification[variant] = merge(\n        merged.notification[variant],\n        partialTheme.notification?.default,\n        partialTheme.notification?.[variant],\n      );\n    }\n\n    // backwards compatibility for notification hover styles. We only compute hover styles if\n    // the partially provided theme doesn't define them for any of the notification states.\n    const hasDeclaredHoverStyles = ['default', 'unseen', 'unread'].some((variant) =>\n      Boolean(partialTheme.notification?.[variant]?.hover),\n    );\n\n    if (!hasDeclaredHoverStyles) {\n      for (const variant of ['default', 'unseen', 'unread']) {\n        const current = merged.notification[variant];\n\n        merged.notification[variant].backgroundOpacity = variant === 'default' ? 0 : 0.05;\n        merged.notification[variant].hover = merge(\n          {\n            backgroundColor: darken(current.backgroundColor, 5),\n            backgroundOpacity: 0.15,\n          },\n          partialTheme.notification?.default?.hover,\n          partialTheme.notification?.[variant]?.hover,\n        );\n      }\n    }\n\n    // backwards compatibility for status styles. We only compute status style if\n    // the partially provided theme doesn't define them for any of the notification states.\n    const hasDeclaredStateStyles = ['default', 'unseen', 'unread'].some((variant) =>\n      Boolean(partialTheme.notification?.[variant]?.state),\n    );\n\n    if (!hasDeclaredStateStyles) {\n      for (const variant of ['default', 'unseen', 'unread']) {\n        const current = merged.notification[variant];\n        // note that default was technically `toRGBA(current.textColor, 0.5)`, but it also didn't show\n        // the state dot back then, as it was hidden behind the menu button when the notification was read.\n        // so this color differs, but the result is closer to the old behavior - don't show the dot -.\n        const color = variant === 'default' ? 'transparent' : merged.header.backgroundColor;\n        merged.notification[variant].state = merge(current.state, { color });\n      }\n    }\n\n    // backwards compatibility for unseenBadge\n    merged.unseenBadge.borderColor = partialTheme?.unseenBadge?.borderColor || 'transparent';\n\n    // backwards compatibility for container\n    merged.container.borderColor = partialTheme?.container?.borderColor || '';\n\n    // backwards compatibility for banner style\n    merged.banner = merge(\n      merged.banner,\n      {\n        backgroundColor: merged.notification.unseen.backgroundColor,\n        backgroundOpacity: 0.1,\n        textColor: merged.notification.unseen.textColor,\n        fontFamily: merged.footer.fontFamily,\n        textAlign: merged.footer.textAlign,\n        fontSize: merged.footer.fontSize,\n      },\n      partialTheme.banner,\n    ) as IMagicBellTheme['banner'];\n\n    return merged;\n  }, [partialTheme]);\n\n  return <MagicBellThemeContext.Provider value={theme} {...props} />;\n}\n\nexport const useTheme = () => useContext(MagicBellThemeContext);\n\nexport default MagicBellThemeContext;\n","import { css } from '@emotion/react';\n\nconst cleanslate = css`\n  backface-visibility: visible;\n  background-clip: border-box;\n  background-color: transparent;\n  background-origin: padding-box;\n  background-position: 0 0;\n  background-size: auto;\n  border-radius: 0;\n  border: 0;\n  box-shadow: none;\n  box-sizing: content-box;\n  clear: none;\n  clip: auto;\n  color: inherit;\n  cursor: auto;\n  direction: inherit;\n  display: block;\n  left: auto;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue',\n    sans-serif;\n  font-size: 14px;\n  font-weight: normal;\n  height: auto;\n  hyphens: manual;\n  letter-spacing: normal;\n  line-height: 1;\n  margin: 0;\n  max-height: none;\n  max-width: none;\n  min-height: 0;\n  min-width: 0;\n  opacity: 1;\n  outline: invert none medium;\n  padding: 0;\n  perspective: none;\n  position: static;\n  right: auto;\n  top: auto;\n  transform: none;\n  text-align: left;\n  text-decoration: none;\n  vertical-align: baseline;\n  visibility: inherit;\n  white-space: normal;\n  width: auto;\n  word-spacing: normal;\n  z-index: auto;\n\n  div,\n  span,\n  p,\n  a,\n  strong,\n  b,\n  u,\n  i,\n  ol,\n  ul,\n  li,\n  form,\n  label,\n  table,\n  tr,\n  th,\n  td,\n  article,\n  aside,\n  footer,\n  header,\n  nav,\n  section {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n\n  a {\n    cursor: pointer !important;\n    color: inherit !important;\n  }\n\n  button {\n    background: transparent;\n    border: none;\n    font-size: inherit !important;\n    color: inherit;\n    padding: 0;\n    cursor: pointer !important;\n  }\n`;\n\nexport default cleanslate;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\n\nimport { useTheme } from '../../context/MagicBellThemeContext';\nimport { toRGBA } from '../../lib/color';\nimport { cleanslate } from '../Styled';\n\nexport interface Props {\n  count: number;\n}\n\n/**\n * Badge to display the number of unseen notifications. The color of the badge\n * can be customized through the theme context.\n *\n * @example\n * <Badge  />\n */\nexport default function Badge({ count }: Props) {\n  const theme = useTheme();\n  const { unseenBadge: badgeTheme } = theme;\n\n  const style = css`\n    align-items: center;\n    background: ${toRGBA(badgeTheme.backgroundColor, badgeTheme.backgroundOpacity)} !important;\n    border: 1px solid ${badgeTheme.borderColor} !important;\n    border-radius: ${badgeTheme.borderRadius} !important;\n    color: ${badgeTheme.textColor} !important;\n    display: flex;\n    font-family: ${badgeTheme.fontFamily} !important;\n    font-size: ${badgeTheme.fontSize} !important;\n    font-weight: ${badgeTheme.fontWeight} !important;\n    padding: ${badgeTheme.padding} !important;\n    text-align: ${badgeTheme.textAlign} !important;\n    text-transform: ${badgeTheme.textTransform} !important;\n\n    div {\n      width: 100%;\n    }\n  `;\n\n  return (\n    <span css={[cleanslate, style]}>\n      <div aria-label={`${count} unread items`} aria-live=\"polite\" role=\"status\">\n        {count}\n      </div>\n    </span>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\n\nimport { useTheme } from '../../context/MagicBellThemeContext';\nimport Badge from '../Badge';\n\nexport interface Props {\n  count: number;\n}\n\n/**\n * Badge for the bell. Fetches the notifications to get the number of unseen\n * notifications, and displays a badge if there are any.\n *\n * It must be wrapped in a {@link MagicBellThemeProvider}.\n *\n * @example\n * <BellBadge count={3} />\n */\nexport default function BellBadge({ count }: Props) {\n  const theme = useTheme();\n  const { icon: iconTheme } = theme;\n\n  if (count === 0) return null;\n\n  return (\n    <div\n      css={css`\n        position: absolute !important;\n        transform: translate(-50%, -50%) scale(${Math.max(1, parseInt(iconTheme.width) / 24)});\n        top: 10%;\n        left: 80%;\n      `}\n    >\n      <Badge count={count} />\n    </div>\n  );\n}\n","import React from 'react';\n\nimport { useTheme } from '../../context/MagicBellThemeContext';\n\n/**\n * Default MacigBell icon for the notification launcher/toggler.\n *\n * @example\n * <BellIcon />\n */\nexport default function BellIcon() {\n  const { icon: theme } = useTheme();\n\n  return (\n    <svg width={theme.width} height={theme.width} viewBox=\"0 0 27 27\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        d=\"M13.5002 1.35008C14.8661 1.35476 16.1839 1.85467 17.2092 2.75708C18.2345 3.65948 18.8977 4.90313 19.0757 6.25733C19.0757 6.33833 19.0757 6.41933 19.0757 6.50033C19.0789 6.54978 19.0789 6.59938 19.0757 6.64883V6.75008C19.0757 6.83108 19.0757 6.91883 19.0757 6.99983V10.1251C19.159 12.2833 19.8161 14.3803 20.9792 16.2001C21.6542 17.4151 21.9512 17.9618 22.12 18.2251V18.2926H4.84673L4.88048 18.2251C5.04923 17.9483 5.34623 17.4083 6.00773 16.2001C7.15426 14.3755 7.7949 12.2789 7.86398 10.1251V6.98633C7.86398 6.90533 7.86398 6.82433 7.86398 6.73658V6.68258C7.86077 6.63313 7.86077 6.58353 7.86398 6.53408V6.53408C7.87283 6.44344 7.88634 6.35332 7.90448 6.26408C8.07875 4.90403 8.74341 3.65435 9.7737 2.74958C10.804 1.84482 12.1291 1.34718 13.5002 1.35008V1.35008ZM13.5002 8.14381e-05C11.8073 0.00217804 10.1728 0.619518 8.90126 1.73713C7.62966 2.85474 6.80762 4.39643 6.58823 6.07508C6.58823 6.18308 6.58823 6.28433 6.54773 6.39233C6.5413 6.47546 6.5413 6.55896 6.54773 6.64208C6.54117 6.76349 6.54117 6.88517 6.54773 7.00658V10.1251C6.46641 12.0445 5.8771 13.9079 4.83998 15.5251C3.72623 17.5501 3.69923 17.5501 3.69923 17.5501L2.94323 18.9001C2.88069 18.9728 2.84212 19.063 2.83278 19.1585C2.82344 19.2539 2.84379 19.3499 2.89105 19.4333C2.93831 19.5168 3.01018 19.5836 3.09684 19.6247C3.1835 19.6658 3.28072 19.6791 3.37523 19.6628H23.6252C23.7092 19.6655 23.7923 19.6453 23.8658 19.6046C23.9392 19.5638 24.0003 19.5039 24.0425 19.4313C24.0847 19.3586 24.1065 19.2759 24.1055 19.1919C24.1045 19.1079 24.0809 19.0257 24.037 18.9541L23.281 17.6041C23.281 17.6041 23.281 17.6041 22.1402 15.5791C21.113 13.9408 20.5421 12.0579 20.4865 10.1251V6.98633C20.493 6.86492 20.493 6.74324 20.4865 6.62183C20.4929 6.53871 20.4929 6.45521 20.4865 6.37208C20.4865 6.26408 20.4865 6.16283 20.446 6.05483C20.2227 4.3735 19.3942 2.83119 18.1157 1.71669C16.8372 0.602178 15.1963 -0.00811186 13.5002 8.14381e-05V8.14381e-05Z\"\n        fill={theme.borderColor}\n      />\n      <path\n        d=\"M18.4544 23.2402C18.2681 23.5004 18.0628 23.7463 17.8401 23.976C17.2722 24.5502 16.5983 25.0087 15.8556 25.326C15.1152 25.6377 14.32 25.7982 13.5167 25.7982C12.7134 25.7982 11.9182 25.6377 11.1779 25.326C10.4352 25.0087 9.76121 24.5502 9.19335 23.976C8.96872 23.748 8.76327 23.502 8.5791 23.2402\"\n        stroke={theme.borderColor}\n        strokeWidth=\"1.35\"\n        strokeMiterlimit=\"10\"\n        strokeLinecap=\"round\"\n      />\n    </svg>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useBell } from '@magicbell/react-headless';\nimport { isNil } from 'ramda';\n\nimport { useMagicBellContext } from '../../context/MagicBellContext';\nimport { useTheme } from '../../context/MagicBellThemeContext';\nimport { cleanslate } from '../Styled';\nimport BellBadge from './BellBadge';\nimport BellIcon from './BellIcon';\n\nexport interface Props {\n  Icon?: JSX.Element;\n  Badge?: (props: { count: number }) => JSX.Element | null;\n  onClick: () => void;\n  storeId?: string;\n  counter?: 'unread' | 'unseen';\n}\n\n/**\n * Bell. Renders the number of unseen notifications as well. When the bell is\n * clicked, all notifications are marked as seen.\n *\n * It must be wrapped in a {@link MagicBellThemeProvider} component.\n *\n * @example\n * <Bell onClick={toggleNotifications} />\n */\nexport default function Bell({ Icon, Badge = BellBadge, onClick, storeId, counter }: Props) {\n  const notifications = useBell({ storeId });\n  const theme = useTheme();\n  const { isFetchingConfig } = useMagicBellContext();\n  const { icon: iconTheme } = theme;\n\n  const handleClick = () => {\n    notifications?.markAllAsSeen();\n    onClick();\n  };\n\n  const containerStyle = css`\n    display: block;\n    cursor: pointer;\n    position: relative !important;\n    width: ${iconTheme.width} !important;\n  `;\n\n  const iconStyle = css`\n    position: relative !important;\n\n    & > * {\n      height: 100%;\n      width: 100%;\n    }\n  `;\n\n  if (isFetchingConfig) {\n    return <div css={[cleanslate, containerStyle]} />;\n  }\n\n  return (\n    <a\n      // Ugly, but we need it for now due to style issues\n      role=\"button\"\n      onClick={handleClick}\n      css={[cleanslate, containerStyle]}\n      aria-label=\"Notifications\"\n      data-testid=\"bell\"\n      data-magicbell-bell\n    >\n      <div css={iconStyle}>{!isNil(Icon) ? Icon : <BellIcon />}</div>\n      {notifications && (\n        <Badge count={counter === 'unread' ? notifications?.unreadCount : notifications?.unseenCount} />\n      )}\n    </a>\n  );\n}\n","import React from 'react';\n\nimport { useTheme } from '../../context/MagicBellThemeContext';\n\n/**\n * Default MacigBell icon for the notification launcher/toggler.\n *\n * @example\n * <BellIcon />\n */\nexport default function BellIcon() {\n  const theme = useTheme();\n  const { icon: iconTheme } = theme;\n\n  return (\n    <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill={iconTheme.borderColor}>\n      <path d=\"M15.9997 4.70663C14.3971 4.71182 12.8617 5.34576 11.7284 6.47013C10.5951 7.59449 9.95592 9.11801 9.95038 10.7082V15.0907C9.95038 16.4805 9.85234 17.3932 9.62941 18.1738C9.39598 18.9845 9.04584 19.5809 8.55447 20.3349C8.38874 20.5862 8.23117 20.8144 8.08761 21.0217C7.66277 21.6158 8.58949 21.7583 9.06218 21.8324C10.8129 22.115 13.2639 22.2957 16.0102 22.2957C18.7565 22.2957 21.2052 22.1196 22.9582 21.8324C24.1791 21.6344 24.0822 21.3031 23.5897 20.5584C23.0819 19.7929 22.7038 19.1791 22.44 18.3718C22.1762 17.5646 22.0467 16.6496 22.0467 15.3119V10.7082C22.0442 9.11807 21.4069 7.59366 20.2742 6.4688C19.1414 5.34394 17.6057 4.71031 16.0032 4.70663H15.9997ZM16.0032 2C18.3263 2.01068 20.551 2.93195 22.1926 4.56308C23.8342 6.19422 24.7596 8.40302 24.7673 10.7082V15.3166C24.7673 16.3589 24.8502 17.0214 25.0217 17.5414C25.1933 18.0614 25.4711 18.5085 25.8528 19.0829C26.1294 19.501 26.4048 19.8647 26.6289 20.1623C27.1588 20.8642 27.5136 21.3344 27.4996 21.976V22.0061C27.4996 23.2234 25.9263 24.0908 23.3854 24.4985C21.4713 24.8089 18.858 25 16.0009 25C13.1437 25 10.5304 24.8089 8.61516 24.4985C6.07428 24.0874 4.50214 23.2245 4.50214 22.0061V21.9957C4.46829 21.3286 4.83944 20.8306 5.40434 20.0766C5.64944 19.7489 5.95057 19.3447 6.26686 18.8629C6.61701 18.3267 6.86094 17.9201 7.001 17.4325C7.15039 16.9091 7.21575 16.2153 7.21575 15.0884V10.7082C7.22192 8.40035 8.14864 6.18875 9.79334 4.55693C11.438 2.92511 13.6669 2.00581 15.9927 2H16.0032Z\" />\n      <path d=\"M20.4988 26C20.4489 27.0446 19.9795 28.0338 19.1834 28.7721C18.7655 29.1614 18.2692 29.4702 17.7228 29.6809C17.1765 29.8916 16.5909 30 15.9994 30C15.408 30 14.8223 29.8916 14.276 29.6809C13.7296 29.4702 13.2333 29.1614 12.8154 28.7721C12.0193 28.0338 11.5499 27.0446 11.5 26C12.3651 26.0703 13.3047 26.1198 14.2916 26.1473C14.3561 26.4337 14.5025 26.6985 14.7154 26.9139C14.9283 27.1293 15.1998 27.2872 15.5013 27.371C15.8027 27.4548 16.1228 27.4613 16.4279 27.3898C16.733 27.3184 17.0116 27.1716 17.2345 26.9651C17.4739 26.7413 17.6382 26.4575 17.7072 26.1484C18.6941 26.1209 19.6337 26.0714 20.5 26.0011\" />\n    </svg>\n  );\n}\n","import { pathOr } from 'ramda';\nimport { createContext, useCallback, useContext } from 'react';\n\nconst TranslationsContext = createContext<any>({});\nexport default TranslationsContext;\n\nexport const TranslationsProvider = TranslationsContext.Provider;\nexport const useTranslations = () => useContext(TranslationsContext);\n\nexport function useTranslate() {\n  const translations = useTranslations();\n\n  return useCallback(\n    (id: string, defaultMessage?: string) => pathOr(defaultMessage, id.split('.'), translations),\n    [translations],\n  );\n}\n","/* eslint-disable no-restricted-globals */\n\n/**\n * Open a centered popup window.\n *\n * @param url Url of the floating window\n */\nexport function openWindow(url: string) {\n  const top = (screen.height - 400) / 4;\n  const left = (screen.width - 600) / 2;\n  window.open(url, '', `width=600,height=400,scrollbars=no,top=${top},left=${left}`);\n}\n","import { pathOr } from 'ramda';\nimport React from 'react';\n\nimport { useTranslations } from '../../context/TranslationsContext';\n\ntype TextProps = {\n  id: string;\n  defaultMessage: string;\n  html?: boolean;\n};\n\n/**\n *\n * @example\n * <Text id=\"header.title\" defaultMessage=\"My Notifications\" />\n */\nexport default function Text({ id, defaultMessage, html = false }: TextProps) {\n  const translations = useTranslations();\n  const localizedText = pathOr(defaultMessage, id.split('.'), translations);\n\n  if (html) return <span dangerouslySetInnerHTML={{ __html: localizedText }} />;\n  return <>{localizedText}</>;\n}\n","import React from 'react';\n\n/**\n * Close icon.\n *\n * @example\n * <CloseIcon />\n */\nexport default function CloseIcon() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill=\"none\"\n      width=\"18px\"\n      height=\"18px\"\n      viewBox=\"0 0 24 24\"\n      stroke=\"currentColor\"\n    >\n      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n    </svg>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\n\nimport CloseIcon from '../UserPreferencesPanel/CloseIcon';\n\ntype CloseBannerButtonProps = {\n  onClick: () => void;\n};\n\n/**\n *\n * @example\n * <EnablePushNotificationsButton onClick={closeBanner} />\n */\nexport default function CloseBannerButton({ onClick }: CloseBannerButtonProps) {\n  const handleClick = () => {\n    onClick();\n  };\n\n  return (\n    <button\n      onClick={handleClick}\n      aria-label=\"close notification\"\n      css={css`\n        display: flex;\n        align-items: center;\n\n        svg {\n          height: 24px;\n        }\n      `}\n    >\n      <CloseIcon />\n    </button>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\n\nimport { useTheme } from '../../context/MagicBellThemeContext';\nimport Text from '../Text';\n\ninterface Props {\n  onClick: () => void;\n}\n\n/**\n *\n * @example\n * <EnablePushNotificationsButton onClick={enableNotifications} />\n */\nexport default function EnablePushNotificationsButton({ onClick }: Props) {\n  const theme = useTheme();\n\n  const handleClick = () => {\n    onClick();\n  };\n\n  return (\n    <button\n      css={css`\n        padding: 10px !important;\n        border-radius: 4px !important;\n        background: ${theme.footer.backgroundColor} !important;\n        color: ${theme.footer.textColor} !important;\n      `}\n      onClick={handleClick}\n    >\n      <Text id=\"web-push-notifications.enable-now\" defaultMessage=\"Enable Now\" />\n    </button>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { clientSettings, useConfig } from '@magicbell/react-headless';\nimport { path, pathOr } from 'ramda';\nimport { useLocalStorage } from 'react-use';\n\nimport { useTheme } from '../../context/MagicBellThemeContext';\nimport { toRGBA } from '../../lib/color';\nimport { openWindow } from '../../lib/window';\nimport Text from '../Text';\nimport CloseBannerButton from './CloseBannerButton';\nimport EnablePushNotificationsButton from './EnablePushNotificationsButton';\n\n/**\n * Banner to ask the user to enable push notifications.\n *\n * @example\n * <EnablePushNotificationsBanner />\n */\nexport default function EnablePushNotificationsBanner() {\n  const { channels } = useConfig();\n  const isWebPushEnabled = pathOr(false, ['webPush', 'enabled'], channels);\n\n  const { apiKey, userEmail, userExternalId } = clientSettings.getState();\n\n  const theme = useTheme();\n\n  const [wasRequested, setRequestedAt] = useLocalStorage<number | null>(\n    `magicbell:${apiKey}:web-push-requested-at`,\n    null,\n  );\n\n  const enablePushNotifications = () => {\n    const subscribeUrl = path<string>(['webPush', 'config', 'subscribeUrl'], channels);\n    const { accentColor, backgroundColor, textColor } = theme.dialog;\n\n    const url = new URL(subscribeUrl);\n    if (userEmail) url.searchParams.set('user_email', userEmail);\n    if (userExternalId) url.searchParams.set('user_external_id', userExternalId);\n\n    if (accentColor && backgroundColor && textColor) {\n      url.searchParams.set('background_color', backgroundColor);\n      url.searchParams.set('text_color', textColor);\n      url.searchParams.set('accent_color', accentColor);\n    }\n\n    setRequestedAt(Date.now());\n    openWindow(url.toString());\n  };\n\n  const closeBanner = () => {\n    setRequestedAt(Date.now());\n  };\n\n  if (wasRequested || !isWebPushEnabled) return null;\n  return (\n    <div\n      css={css`\n        padding: 14px 24px !important;\n        display: flex;\n        align-items: center;\n        background: ${toRGBA(theme.banner.backgroundColor, theme.banner.backgroundOpacity)};\n        box-shadow: ${theme.banner.boxShadow ? `${theme.banner.boxShadow} !important` : undefined};\n        color: ${theme.banner.textColor} !important;\n        font-family: ${theme.banner.fontFamily} !important;\n        text-align: ${theme.banner.textAlign} !important;\n        font-size: ${theme.banner.fontSize} !important;\n        line-height: 1.5 !important;\n\n        & > * {\n          margin-left: 1em;\n        }\n      `}\n    >\n      <p style={{ flex: 1 }}>\n        <Text\n          id=\"web-push-notifications.notice\"\n          defaultMessage=\"By enabling browser notifications, you’ll stay up to date even better.\"\n        />\n      </p>\n      <EnablePushNotificationsButton onClick={enablePushNotifications} />\n      <CloseBannerButton onClick={closeBanner} />\n    </div>\n  );\n}\n","import React from 'react';\n\n/**\n * Full MagicBell logo.\n *\n * @example\n * <MagicBellLogo  />\n */\nexport default function MagicBellLogo() {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 516 100\"\n      role=\"img\"\n      aria-label=\"MagicBell logo\"\n      fill=\"currentColor\"\n      width=\"64\"\n      height=\"16\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M1.77 72.8a1.73 1.73 0 01-1.53-2.61l2.79-5s0 .09 4.22-7.55c3.2-5.42 6.2-12.25 6.2-20.25V26.6c0-11.05 9-26.6 26.61-26.6 9.88 0 17 4.49 21.39 10.52a.68.68 0 01.36.09l9.64 2.69a2.55 2.55 0 011.17 4.23l-5.93 6c.09 1.08.18 2.06.18 3.14v10.7c0 7.46 2.52 13.84 5.3 19l3.78 8.27s0-.09 2.6 5.57a1.76 1.76 0 01-1.61 2.52l-75.17.07zM18.85 62h2.24c4.86 0 36-4.49 36-33.34 0-7.64-5.66-17.08-17.07-17.08s-17.08 10-17.08 17.08v6.92c0 5.12-.09 10.52-2.42 16.72-.9 2.24-2.25 5-3.24 7a1.84 1.84 0 001.57 2.7zm-1 21.58a1.59 1.59 0 00-1.51 2.2v.1a22.83 22.83 0 005.35 7.37 25.108 25.108 0 008.07 5 26.818 26.818 0 0019.06 0 25.27 25.27 0 008.08-5 23 23 0 005.35-7.37v-.1a1.578 1.578 0 00-1.51-2.2h-7.46a2 2 0 00-1.58.86 13.63 13.63 0 01-1.92 2.18 15 15 0 01-4.79 3 15.87 15.87 0 01-11.3 0 15 15 0 01-4.79-3 14.157 14.157 0 01-1.92-2.18 1.93 1.93 0 00-1.53-.86h-7.6z\"\n      ></path>\n      <path d=\"M491.772 9.82h-6.29a1.8 1.8 0 00-1.8 1.8v60.21a1.8 1.8 0 001.8 1.8h6.29a1.8 1.8 0 001.8-1.8V11.62a1.8 1.8 0 00-1.8-1.8zM180.451 73.63h-6.29a1.798 1.798 0 01-1.8-1.79V25.38a.448.448 0 00-.654-.396.45.45 0 00-.206.216l-12.92 29.54a1.787 1.787 0 01-1.65 1.07h-7.48a1.777 1.777 0 01-1.65-1.07L134.621 25a.45.45 0 00-.86.18v46.66a1.799 1.799 0 01-1.8 1.79h-6.29a1.798 1.798 0 01-1.8-1.79V11.62a1.811 1.811 0 011.8-1.8h11.88a1.8 1.8 0 011.65 1.08l13.55 30.83a.447.447 0 00.415.276.449.449 0 00.415-.276l13.27-30.82a1.821 1.821 0 011.66-1.09h11.94a1.8 1.8 0 011.8 1.8v60.22a1.8 1.8 0 01-.528 1.27 1.781 1.781 0 01-1.272.52zm333.2-63.81h-6.29a1.8 1.8 0 00-1.8 1.8v60.21a1.8 1.8 0 001.8 1.8h6.29a1.8 1.8 0 001.8-1.8V11.62a1.8 1.8 0 00-1.8-1.8zm-93.279 40.23a14.48 14.48 0 00-2.78-4.86 15.75 15.75 0 00-4.68-3.59 10.513 10.513 0 00-1.46-.6 20.37 20.37 0 00-2.57-.85c-.934-.15-1.876-.25-2.82-.3a.22.22 0 01-.22-.22.216.216 0 01.133-.213.218.218 0 01.087-.017 11.75 11.75 0 002.22-.57c.42-.16.84-.34 1.25-.53a11.27 11.27 0 001.09-.56 15.782 15.782 0 003.5-2.87 12.28 12.28 0 002.48-3.87c.626-1.574.932-3.257.9-4.95 0-5.31-2-9.27-5.85-12.06-3.85-2.79-9.09-4.13-15.75-4.13h-13.69a1.788 1.788 0 00-1.76 1.76h-.27v60.21a1.81 1.81 0 001.79 1.81h17.29c2.918.034 5.826-.36 8.63-1.17a21.302 21.302 0 007-3.43 14.7 14.7 0 004.69-5.58 16.826 16.826 0 001.7-7.83 16.552 16.552 0 00-.91-5.58zm-30.05-29.61a1.807 1.807 0 011.8-1.8h3.41a13.8 13.8 0 017.92 2.07c2 1.36 3 3.51 3 6.39a8.546 8.546 0 01-2.61 6.57c-1.72 1.63-4.32 2.43-7.74 2.43h-4a1.802 1.802 0 01-1.8-1.79l.02-13.87zm17.18 41.76c-1.88 1.8-4.67 2.7-8.45 2.7h-6.84a1.81 1.81 0 01-1.8-1.8V46.63a1.807 1.807 0 011.8-1.8h5.94c3.95 0 6.93.9 9 2.71a9.076 9.076 0 013.07 7.29 10.015 10.015 0 01-2.72 7.37zm-58.891-34.04a22 22 0 018 1.35 20.286 20.286 0 015.84 3.41 16.373 16.373 0 013.77 4.58 18.482 18.482 0 011.62 3.69.928.928 0 01-.9 1.17h-7.91a1.897 1.897 0 01-1.62-1 9.8 9.8 0 00-4-3.87 12.139 12.139 0 00-13.3 2.16 15.26 15.26 0 00-4.4 11.06 14.872 14.872 0 006.74 12.59 11.998 11.998 0 006.25 1.7c2.78 0 4.94-.63 6.47-2a12.785 12.785 0 002.87-3.51 1.736 1.736 0 011.53-.9h7.88a.892.892 0 01.81 1.26 27.933 27.933 0 01-2.07 4.41 20.468 20.468 0 01-4 4.76 19.534 19.534 0 01-5.84 3.33 23.275 23.275 0 01-7.82 1.25 24.747 24.747 0 01-9-1.61 19.527 19.527 0 01-7.19-4.68 20.684 20.684 0 01-4.76-7.19 24 24 0 01-1.71-9.34c-.029-2.97.507-5.92 1.58-8.69a22.502 22.502 0 014.49-7.19 20.002 20.002 0 017.1-4.86 22.152 22.152 0 019.57-1.88zM311.352 9.98h-1.07a5.02 5.02 0 00-5.02 5.02v.03a5.02 5.02 0 005.02 5.02h1.07a5.02 5.02 0 005.02-5.02V15a5.02 5.02 0 00-5.02-5.02zm2.529 18.34h-6.21a1.8 1.8 0 00-1.8 1.8V72a1.8 1.8 0 001.8 1.8h6.21a1.8 1.8 0 001.8-1.8V30.12a1.8 1.8 0 00-1.8-1.8zm138.419-.16a21 21 0 019.54 2 20.408 20.408 0 016.67 5.13 20.992 20.992 0 013.87 7.12 24.435 24.435 0 011.26 8v1.17a1.811 1.811 0 01-1.8 1.8h-29.18a1.855 1.855 0 00-1.393.669 1.855 1.855 0 00-.407 1.49c.174.898.446 1.773.81 2.61a13.625 13.625 0 002.79 4 13.852 13.852 0 004.05 2.7 11.237 11.237 0 004.87 1 11.88 11.88 0 005.58-1.26 11.46 11.46 0 003.42-2.88 1.883 1.883 0 011.44-.72h7.93a.917.917 0 01.916.896.912.912 0 01-.106.455 34.624 34.624 0 01-2.11 3.37 17.758 17.758 0 01-4.15 4.05 20.816 20.816 0 01-5.67 2.79 22.407 22.407 0 01-7.2 1.08 23.368 23.368 0 01-9.1-1.71 22.352 22.352 0 01-7.2-4.77 22.07 22.07 0 01-4.68-7.29 26.313 26.313 0 01-1.71-9.37 24.373 24.373 0 011.44-8.55 22.56 22.56 0 014.27-7.12A20.252 20.252 0 01443.2 30a21.319 21.319 0 019.1-1.84zm0 7.47a10.74 10.74 0 00-4.6.9 12.005 12.005 0 00-3.51 2.34 10.581 10.581 0 00-2.34 3.34 9.559 9.559 0 00-.63 1.71 1.745 1.745 0 00.278 1.563 1.739 1.739 0 001.432.687h18.64a1.77 1.77 0 001.71-2.25 11.534 11.534 0 00-6.57-7.48 11.661 11.661 0 00-4.41-.81zM228.341 30v4a.438.438 0 01-.287.423.44.44 0 01-.493-.133c-.46-.52-1-1-1.48-1.58a14.818 14.818 0 00-3-2.31 17.44 17.44 0 00-3.88-1.65 17.008 17.008 0 00-4.81-.62 20.608 20.608 0 00-8.18 1.64 20.917 20.917 0 00-6.76 4.62 21.275 21.275 0 00-4.58 7.11 24.481 24.481 0 00-1.69 9.26 25.154 25.154 0 001.82 10 21.997 21.997 0 004.76 7.16 19.298 19.298 0 006.59 4.32 19.886 19.886 0 007.29 1.42 17.14 17.14 0 008.86-2.09 23.029 23.029 0 005.05-4 .45.45 0 01.77.31v4a1.798 1.798 0 001.8 1.79h6.33a1.8 1.8 0 001.8-1.79V30a1.803 1.803 0 00-1.8-1.79h-6.29a1.8 1.8 0 00-1.82 1.79zm0 25.5a10.7 10.7 0 01-.44 1.23 14.142 14.142 0 01-2.8 4.36 12.612 12.612 0 01-4 2.84 14.359 14.359 0 01-5.73 1 12.366 12.366 0 01-4.79-1.18 11.64 11.64 0 01-4-3.21 13.211 13.211 0 01-2.4-4.54 18.2 18.2 0 01-.75-5.2c.002-1.735.276-3.46.81-5.11a13.713 13.713 0 012.4-4.54 11.64 11.64 0 014-3.21 12.939 12.939 0 015.81-1.24 12.002 12.002 0 014.9 1 11.71 11.71 0 014 2.88 13.68 13.68 0 012.67 4.54c.136.357.253.72.35 1.09.43 1.56.642 3.172.63 4.79a14.914 14.914 0 01-.66 4.45v.05zm55.03-25.5v4a.452.452 0 01-.79.29c-.45-.52-.94-1-1.48-1.58a14.54 14.54 0 00-3-2.31 17.35 17.35 0 00-3.87-1.65 17.003 17.003 0 00-4.81-.62 20.618 20.618 0 00-14.9 6.23 21.29 21.29 0 00-4.58 7.11 24.321 24.321 0 00-1.69 9.26c-.08 3.422.54 6.825 1.82 10a21.996 21.996 0 004.76 7.16 19.372 19.372 0 006.58 4.32 19.998 19.998 0 007.3 1.42 17.07 17.07 0 008.85-2.09 22.993 22.993 0 005.06-4 .45.45 0 01.77.31v6.37c.01.19.01.38 0 .57a12.692 12.692 0 01-12.74 12 16.071 16.071 0 01-9.47-2.79 5.679 5.679 0 01-1.83-2.15 1.825 1.825 0 00-1.68-1.19h-7.52a.906.906 0 00-.859.626.893.893 0 00-.041.374c.144 1.849.69 3.644 1.6 5.26.215.396.452.78.71 1.15 3.8 5.5 11.63 8.69 19.05 8.69a22.599 22.599 0 0022.62-21.39V30a1.782 1.782 0 00-1.086-1.696 1.798 1.798 0 00-.694-.144h-6.29a1.794 1.794 0 00-1.668 1.14 1.783 1.783 0 00-.122.7zm-.44 26.73a14.162 14.162 0 01-2.81 4.27 12.523 12.523 0 01-4 2.85c-1.497.67-3.12 1.01-4.76 1a12.908 12.908 0 01-5.74-1.21 11.688 11.688 0 01-4.05-3.21 12.992 12.992 0 01-2.36-4.43 18.2 18.2 0 01-.75-5.2 16.662 16.662 0 01.8-5.11 13.732 13.732 0 012.4-4.54 11.69 11.69 0 014.05-3.21 12.911 12.911 0 015.74-1.24 12.063 12.063 0 014.9 1 11.701 11.701 0 014 2.88 13.663 13.663 0 012.67 4.54c.13.36.25.72.35 1.09a17.43 17.43 0 01.63 4.66V51a14.9 14.9 0 01-.63 4.42c-.125.427-.272.848-.44 1.26v.05z\"></path>\n    </svg>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useConfig } from '@magicbell/react-headless';\nimport { pathOr } from 'ramda';\n\nimport MagicBellLogo from './MagicBellLogo';\n\n/**\n * MagicBell Logo for the footer. If the customer has branding off, the logo is\n * hidden.\n *\n * @example\n * <FooterLogo />\n */\nexport default function FooterLogo() {\n  const inboxConfig = useConfig((state) => state.inbox);\n  const hideBranding = pathOr(false, ['features', 'noMagicbellBranding', 'enabled'], inboxConfig);\n\n  const style = css`\n    height: 20px;\n    display: inline-flex;\n    align-items: center;\n  `;\n\n  if (hideBranding) return <div css={style} />;\n\n  return (\n    <div css={style}>\n      <a href=\"https://magicbell.io/?utm_source=widget\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <MagicBellLogo />\n      </a>\n    </div>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\n\nimport { useTheme } from '../../context/MagicBellThemeContext';\nimport { toRGBA } from '../../lib/color';\nimport { cleanslate } from '../Styled';\n\nexport interface StyledFooterProps {\n  children: React.ReactElement | React.ReactElement[];\n}\n\n/**\n * Container for the `Footer` component. Applies the theme defined for the footer.\n *\n * @example\n * <StyledFooter>Powered by MB</StyledFooter>\n */\nexport default function StyledFooter({ children }: StyledFooterProps) {\n  const theme = useTheme();\n  const { footer: footerTheme } = theme;\n\n  const style = css`\n    background: ${toRGBA(footerTheme.backgroundColor, footerTheme.backgroundOpacity)};\n    color: ${toRGBA(footerTheme.textColor, 0.75)} !important;\n    font-family: ${footerTheme.fontFamily} !important;\n    font-size: ${footerTheme.fontSize} !important;\n    font-weight: ${footerTheme.fontWeight} !important;\n    text-align: ${footerTheme.textAlign} !important;\n    padding: ${footerTheme.padding} !important;\n    border-top: ${footerTheme.borderColor ? `1px solid ${footerTheme.borderColor} !important` : undefined};\n    flex-shrink: 0 !important;\n\n    &:first-of-type {\n      border-radius: ${footerTheme.borderRadius} ${footerTheme.borderRadius} 0 0 !important;\n    }\n\n    &:last-of-type {\n      border-radius: 0 0 ${footerTheme.borderRadius} ${footerTheme.borderRadius}!important;\n    }\n\n    span {\n      color: ${footerTheme.textColor} !important;\n\n      a {\n        color: ${footerTheme.textColor};\n        margin-right: 16px !important;\n        opacity: 0.75;\n        display: block;\n      }\n    }\n  `;\n\n  return <div css={[cleanslate, style]}>{children}</div>;\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { ReactNode } from 'react';\n\nimport { useTheme } from '../../context/MagicBellThemeContext';\nimport FooterLogo from './FooterLogo';\nimport StyledFooter from './StyledFooter';\n\nexport type FooterProps = {\n  children?: ReactNode;\n};\n\n/**\n * Footer for the notification inbox. Renders a button to toggle the user\n * preferences panel.\n *\n * @example\n * <Footer />\n */\nexport default function Footer({ children }: FooterProps) {\n  const theme = useTheme();\n  const { footer: footerTheme } = theme;\n\n  const contentStyle = css`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    color: ${footerTheme.textColor} !important;\n\n    a,\n    button {\n      color: ${footerTheme.textColor};\n      display: block;\n    }\n\n    a {\n      opacity: 0.85;\n    }\n  `;\n\n  return (\n    <StyledFooter>\n      <div css={contentStyle}>\n        <FooterLogo />\n        {children}\n      </div>\n    </StyledFooter>\n  );\n}\n","import React from 'react';\n\n/**\n * Gear icon.\n *\n * @example\n * <SettingsIcon />\n */\nexport default function SettingsIcon() {\n  return (\n    <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M11.4897 3.17C11.1097 1.61 8.88975 1.61 8.50975 3.17C8.45302 3.40442 8.34174 3.62213 8.18497 3.80541C8.02821 3.9887 7.83038 4.13238 7.60759 4.22477C7.38481 4.31716 7.14336 4.35564 6.90289 4.33709C6.66242 4.31854 6.42973 4.24347 6.22375 4.118C4.85175 3.282 3.28175 4.852 4.11775 6.224C4.65775 7.11 4.17875 8.266 3.17075 8.511C1.60975 8.89 1.60975 11.111 3.17075 11.489C3.40523 11.5458 3.62298 11.6572 3.80626 11.8141C3.98955 11.971 4.13319 12.1689 4.22549 12.3918C4.31779 12.6147 4.35614 12.8563 4.33742 13.0968C4.3187 13.3373 4.24343 13.5701 4.11775 13.776C3.28175 15.148 4.85175 16.718 6.22375 15.882C6.42969 15.7563 6.6624 15.6811 6.90293 15.6623C7.14347 15.6436 7.38502 15.682 7.60793 15.7743C7.83084 15.8666 8.02879 16.0102 8.18568 16.1935C8.34256 16.3768 8.45394 16.5945 8.51075 16.829C8.88975 18.39 11.1108 18.39 11.4888 16.829C11.5457 16.5946 11.6572 16.377 11.8142 16.1939C11.9711 16.0107 12.169 15.8672 12.3918 15.7749C12.6147 15.6826 12.8561 15.6442 13.0966 15.6628C13.3371 15.6815 13.5698 15.7565 13.7758 15.882C15.1477 16.718 16.7178 15.148 15.8818 13.776C15.7563 13.57 15.6812 13.3373 15.6626 13.0969C15.644 12.8564 15.6824 12.6149 15.7747 12.3921C15.8669 12.1692 16.0105 11.9713 16.1936 11.8144C16.3768 11.6575 16.5944 11.546 16.8288 11.489C18.3898 11.11 18.3898 8.889 16.8288 8.511C16.5943 8.45419 16.3765 8.34281 16.1932 8.18593C16.01 8.02904 15.8663 7.83109 15.774 7.60818C15.6817 7.38527 15.6434 7.14372 15.6621 6.90318C15.6808 6.66265 15.7561 6.42994 15.8818 6.224C16.7178 4.852 15.1477 3.282 13.7758 4.118C13.5698 4.24368 13.3371 4.31895 13.0966 4.33767C12.856 4.35639 12.6145 4.31804 12.3916 4.22574C12.1687 4.13344 11.9707 3.9898 11.8138 3.80651C11.6569 3.62323 11.5456 3.40548 11.4888 3.171L11.4897 3.17ZM9.99975 13C10.7954 13 11.5585 12.6839 12.1211 12.1213C12.6837 11.5587 12.9998 10.7956 12.9998 10C12.9998 9.20435 12.6837 8.44129 12.1211 7.87868C11.5585 7.31607 10.7954 7 9.99975 7C9.2041 7 8.44104 7.31607 7.87843 7.87868C7.31582 8.44129 6.99975 9.20435 6.99975 10C6.99975 10.7956 7.31582 11.5587 7.87843 12.1213C8.44104 12.6839 9.2041 13 9.99975 13Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { ReactNode } from 'react';\n\nimport { useTheme } from '../../context/MagicBellThemeContext';\nimport { toRGBA } from '../../lib/color';\nimport { cleanslate } from '../Styled';\n\nexport interface Props {\n  children: ReactNode;\n}\n\n/**\n * Header for the notification inbox. It renders a \"Mark All Read\" button,\n * which invokes the `onAllRead` callback.\n *\n * The component must be wrapped in a {@link MagicBellThemeProvider} component.\n *\n * @example\n * <StyledHeader>Title</StyledHeader>\n */\nexport default function StyledHeader({ children }: Props) {\n  const theme = useTheme();\n  const { header: headerTheme } = theme;\n\n  const style = css`\n    align-items: center;\n    background: ${toRGBA(headerTheme.backgroundColor, headerTheme.backgroundOpacity)} !important;\n    color: ${headerTheme.textColor};\n    display: flex;\n    font-family: ${headerTheme.fontFamily} !important;\n    font-size: ${headerTheme.fontSize} !important;\n    justify-content: space-between;\n    text-align: ${headerTheme.textAlign} !important;\n    text-transform: ${headerTheme.textTransform} !important;\n    padding: ${headerTheme.padding} !important;\n    flex-shrink: 0 !important;\n    border-bottom: ${headerTheme.borderColor ? `1px solid ${headerTheme.borderColor} !important` : undefined};\n    font-weight: ${headerTheme.fontWeight};\n    height: ${headerTheme.fontSize} !important;\n\n    &:first-of-type {\n      border-radius: ${headerTheme.borderRadius} ${headerTheme.borderRadius} 0 0 !important;\n    }\n\n    &:last-of-type {\n      border-radius: 0 0 ${headerTheme.borderRadius} ${headerTheme.borderRadius}!important;\n    }\n\n    & button:hover {\n      opacity: 0.8;\n    }\n\n    & button:active {\n      opacity: 0.9;\n    }\n\n    & button:focus {\n      outline: none;\n    }\n\n    & button:focus-visible {\n      outline: 2px ${headerTheme.textColor} auto !important;\n    }\n  `;\n\n  return <div css={[cleanslate, style]}>{children}</div>;\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { ReactNode } from 'react';\n\nimport StyledHeader from './StyledHeader';\n\nexport interface Props {\n  title: ReactNode;\n  actions?: ReactNode;\n}\n\n/**\n * Header for the notification inbox. It renders a \"Mark All Read\" button,\n * which invokes the `onAllRead` callback.\n *\n * The component must be wrapped in a {@link MagicBellThemeProvider} component.\n *\n * @example\n * <Header title=\"Inbox\" actions={<button>mark as read</button>>} />\n */\nexport default function Header({ title, actions }: Props) {\n  return (\n    <StyledHeader>\n      <div\n        role=\"heading\"\n        css={css`\n          margin-right: 16px !important;\n        `}\n      >\n        {title}\n      </div>\n\n      <div\n        css={css`\n          height: 14px;\n          overflow: visible;\n          display: flex;\n          align-items: center;\n          & > * + * {\n            margin-left: 8px;\n          }\n        `}\n      >\n        {actions}\n      </div>\n    </StyledHeader>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Children, ReactComponentElement, ReactNode } from 'react';\n\nimport { useTheme } from '../../context/MagicBellThemeContext';\nimport Text from '../Text';\n\nfunction isTab(child: unknown): child is ReactComponentElement<typeof Tab> {\n  return child != null && typeof child === 'object' && child['type'] === Tab;\n}\n\nfunction Tabs({\n  children,\n  active,\n  onChange,\n}: {\n  children: React.ReactNode;\n  active?: string;\n  onChange: (value: string) => void;\n}) {\n  const { tabs } = useTheme();\n\n  const style = css`\n    margin: ${tabs.margin} !important;\n\n    & > * + * {\n      margin-left: ${tabs.spacing} !important;\n    }\n  `;\n\n  return (\n    <div css={style} role=\"tablist\">\n      {Children.toArray(children)\n        .filter(isTab)\n        .map((child, idx) => ({\n          ...child,\n          props: {\n            ...child.props,\n            'data-selected': active ? child.props.value === active : idx === 0,\n            onClick: () => onChange(child.props.value),\n          },\n        }))}\n    </div>\n  );\n}\n\nfunction Tab({ children, value, ...props }: { children: ReactNode; value: string; 'data-selected'?: boolean }) {\n  const { tabs } = useTheme();\n\n  // use [aria-selected] to increase specificity, we'll lose from header > button without it\n  const style = css`\n    &[aria-selected] {\n      padding: 10px 8px 12px !important;\n      font-weight: ${tabs.fontWeight} !important;\n      line-height: 1.5 !important;\n      font-size: ${tabs.fontSize} !important;\n      color: ${tabs.color} !important;\n\n      &[aria-selected='true'] {\n        color: ${tabs.activeColor} !important;\n        box-shadow: inset 0px -2px 0px ${tabs.activeColor};\n      }\n    }\n  `;\n\n  return (\n    <button {...props} css={style} role=\"tab\" aria-selected={Boolean(props['data-selected'])}>\n      {typeof children === 'string' ? <Text id={`tab.${value}`} defaultMessage={children} /> : children}\n    </button>\n  );\n}\n\nTabs.Tab = Tab;\n\nexport default Tabs;\n","import React from 'react';\n\nimport Tabs from '../Tabs/Tabs';\n\nexport type HeaderTabsProps = {\n  activeTab: string;\n  onChange: (value: string) => void;\n  tabsConfig: Array<{ storeId: string; label: string }>;\n};\n\nfunction HeaderTabs({ tabsConfig, activeTab, onChange }: HeaderTabsProps) {\n  return (\n    <Tabs active={activeTab} onChange={onChange}>\n      {tabsConfig?.map(({ storeId, label }) => (\n        <Tabs.Tab key={storeId} value={storeId}>\n          {label}\n        </Tabs.Tab>\n      ))}\n    </Tabs>\n  );\n}\n\nexport default HeaderTabs;\n","import type { Options, Placement as PopoverPlacement } from '@popperjs/core';\nimport Tippy, { TippyProps } from '@tippyjs/react/headless';\nimport React from 'react';\n\ntype PopperOptions = Partial<Options>;\n\nexport type { PopoverPlacement, PopperOptions };\n\nexport interface PopoverProps {\n  children: (attrs) => React.ReactNode;\n  closeOnClick?: boolean;\n  isOpen?: boolean;\n  launcher?: React.ReactElement;\n  launcherRef?;\n  offset?: { skidding: number; distance: number };\n  onClickOutside?: () => void;\n  placement?: PopoverPlacement;\n  popperOptions?: PopperOptions;\n  zIndex?: number;\n  trigger?: 'mouseenter focus' | 'click' | 'focusin' | 'mouseenter click' | 'manual';\n  delay?: TippyProps['delay'];\n}\n\n/**\n * Headless popover. Renders the children as its content when the popover is open.\n *\n * You can either pass the launcher component as a property or the ref of the launcher,\n * however one of those is required.\n *\n * @example\n * <Popover launcherRef={bellRef}>\n *   {() => <p>Content</p>}\n * <Popover>\n */\nexport default function Popover({\n  closeOnClick = false,\n  children,\n  isOpen,\n  launcher,\n  launcherRef,\n  offset = { skidding: 0, distance: 10 },\n  onClickOutside,\n  placement = 'bottom-end',\n  popperOptions,\n  zIndex = 9999,\n  trigger = 'mouseenter focus',\n  ...props\n}: PopoverProps) {\n  const controlledMode = isOpen !== undefined;\n  const triggerProps = controlledMode ? { visible: isOpen } : { trigger };\n\n  const handleClickOutside = () => {\n    onClickOutside?.();\n  };\n\n  return (\n    <Tippy\n      {...props}\n      render={children}\n      offset={[offset.skidding, offset.distance]}\n      onClickOutside={handleClickOutside}\n      placement={placement}\n      popperOptions={popperOptions}\n      reference={launcherRef}\n      interactive={!closeOnClick}\n      zIndex={zIndex}\n      {...triggerProps}\n    >\n      {launcher}\n    </Tippy>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { ReactElement } from 'react';\n\nimport { useTheme } from '../../context/MagicBellThemeContext';\nimport Popover, { PopoverProps } from '../Popover/Popover';\n\nexport type TooltipProps = {\n  tooltip?: string;\n  children: ReactElement;\n} & Omit<PopoverProps, 'children' | 'launcher'>;\n\n/**\n * Component that renders a tooltip.\n */\nexport default function Tooltip({ children, tooltip, placement = 'auto', ...props }: TooltipProps) {\n  const theme = useTheme();\n  if (!tooltip) return children;\n\n  const { container: containerTheme, notification: notificationTheme } = theme;\n\n  const tipStyle = css`\n    background: ${containerTheme.backgroundColor} !important;\n    border-radius: 4px !important;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    color: ${notificationTheme.default.textColor} !important;\n    font-size: 0.8em !important;\n    padding: 0.5em !important;\n    text-transform: ${notificationTheme.default.textTransform};\n    white-space: nowrap !important;\n  `;\n\n  return (\n    <Popover launcher={children} placement={placement} {...props}>\n      {() => <span css={tipStyle}>{tooltip}</span>}\n    </Popover>\n  );\n}\n","import React, { forwardRef, HTMLAttributes, ReactNode } from 'react';\n\nimport Tooltip, { TooltipProps } from '../Tooltip/Tooltip';\n\ntype IconButtonProps = {\n  children?: ReactNode;\n  tooltip?: string;\n  tooltipPlacement?: TooltipProps['placement'];\n} & HTMLAttributes<HTMLButtonElement>;\n\nconst IconButton = forwardRef<HTMLButtonElement, IconButtonProps>(function IconButton(\n  { children, tooltip, tooltipPlacement = 'bottom-end', ...props },\n  ref,\n) {\n  return (\n    <Tooltip tooltip={tooltip || props['aria-label']} placement={tooltipPlacement} delay={500}>\n      <button ref={ref} {...props}>\n        {children}\n      </button>\n    </Tooltip>\n  );\n});\n\nexport default IconButton;\n","import React from 'react';\n\nexport default function CheckMarkIcon() {\n  return (\n    <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M10 18C12.1217 18 14.1566 17.1571 15.6569 15.6569C17.1571 14.1566 18 12.1217 18 10C18 7.87827 17.1571 5.84344 15.6569 4.34315C14.1566 2.84285 12.1217 2 10 2C7.87827 2 5.84344 2.84285 4.34315 4.34315C2.84285 5.84344 2 7.87827 2 10C2 12.1217 2.84285 14.1566 4.34315 15.6569C5.84344 17.1571 7.87827 18 10 18V18ZM13.707 8.707C13.8892 8.5184 13.99 8.2658 13.9877 8.0036C13.9854 7.7414 13.8802 7.49059 13.6948 7.30518C13.5094 7.11977 13.2586 7.0146 12.9964 7.01233C12.7342 7.01005 12.4816 7.11084 12.293 7.293L9 10.586L7.707 9.293C7.5184 9.11084 7.2658 9.01005 7.0036 9.01233C6.7414 9.0146 6.49059 9.11977 6.30518 9.30518C6.11977 9.49059 6.0146 9.7414 6.01233 10.0036C6.01005 10.2658 6.11084 10.5184 6.293 10.707L8.293 12.707C8.48053 12.8945 8.73484 12.9998 9 12.9998C9.26516 12.9998 9.51947 12.8945 9.707 12.707L13.707 8.707V8.707Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\n\nimport { useMagicBellContext } from '../../context/MagicBellContext';\nimport { useTheme } from '../../context/MagicBellThemeContext';\nimport Text from '../Text';\n\n/**\n * Is renders an \"All clear\" message and an image to indicate the user has no\n * notifications.\n *\n * @example\n * <ClearInboxMessage />\n */\nexport default function ClearInboxMessage() {\n  const theme = useTheme();\n  const { images } = useMagicBellContext();\n  const { notification: notificationTheme } = theme;\n\n  return (\n    <div\n      css={css`\n        padding: 3em !important;\n        text-align: center;\n        color: ${notificationTheme.default.textColor};\n\n        img {\n          margin: 2em auto;\n          height: 200px;\n        }\n      `}\n    >\n      <p>\n        <Text id=\"messages.empty-inbox\" defaultMessage=\"All clear!<br>We'll let you know when there's more.\" html />\n      </p>\n      <img src={images?.emptyInboxUrl || 'https://assets.magicbell.io/images/empty_inbox.png'} alt=\"No notifications\" />\n    </div>\n  );\n}\n","import React from 'react';\n\ninterface LayoutProps {\n  order: string[];\n  children: React.ReactNode[];\n}\n\n/**\n * Component to sort the children based on the `order` property.\n *\n * @example\n * <Layout order={['footer']}>\n *   <p key=\"footer\">Settings</p>\n * </Layout>\n */\nexport default function Layout({ order, children }: LayoutProps) {\n  return <>{order.map((key) => children.find((child: React.ReactElement) => child?.key === key))}</>;\n}\n","import { css } from '@emotion/react';\n\nimport { useTheme } from '../../context/MagicBellThemeContext';\n\nexport function useProse() {\n  const { prose } = useTheme();\n\n  // double && to make sure that it's more specific than the cleanslate\n  return css`\n    && {\n      line-height: 1.5;\n    }\n\n    && p {\n      margin: 1.25em 0;\n    }\n\n    && a {\n      color: ${prose.links} !important;\n      user-select: none;\n\n      text-decoration: underline;\n      &:hover {\n        text-decoration: none;\n      }\n    }\n\n    && button,\n    && a.button {\n      display: inline-block;\n      color: ${prose.buttons};\n      font-size: 0.875em !important;\n      font-family: inherit;\n      border: 1px solid ${prose.buttonBorders};\n      border-radius: 0.375rem;\n      padding: 0.5em 0.85em;\n      line-height: inherit;\n      background-color: transparent;\n      background-image: none;\n      text-decoration: none;\n      user-select: none;\n\n      &:hover,\n      &:focus {\n        opacity: 0.75;\n      }\n\n      &:active {\n        opacity: 0.5;\n      }\n    }\n\n    && button + button {\n      margin-left: 0.5em;\n    }\n\n    && strong,\n    && b {\n      color: ${prose.bold} !important;\n      font-weight: 600 !important;\n    }\n\n    && ol,\n    && ul {\n      margin: 1.25em 0;\n    }\n\n    && ol {\n      list-style: decimal;\n    }\n\n    && ul {\n      list-style: disc;\n    }\n\n    && li {\n      margin: 0.5em 0 0 2em;\n    }\n\n    && hr {\n      border: none;\n      border-top: 1px solid ${prose.hr};\n      margin: 3em 0;\n      height: 0;\n      color: inherit;\n    }\n\n    && blockquote {\n      font-weight: 500;\n      font-style: italic;\n      color: ${prose.quotes};\n      border-left: 0.25rem solid ${prose.quoteBorders};\n      quotes: '“' '”';\n      margin: 1.6em 0;\n      padding-left: 1em;\n    }\n\n    && blockquote p:first-of-type::before {\n      content: open-quote;\n    }\n\n    && blockquote p:last-of-type::after {\n      content: close-quote;\n    }\n\n    && h1 {\n      color: ${prose.headings};\n      font-weight: 800;\n      font-size: 2.25em;\n      margin: 0 0 0.9em 0;\n      line-height: 1.1111111;\n    }\n\n    && h2 {\n      color: ${prose.headings};\n      font-weight: 700;\n      font-size: 1.5em;\n      margin: 2em 0 1em 0;\n      line-height: 1.3333333;\n    }\n\n    && h3 {\n      color: ${prose.headings};\n      font-weight: 600;\n      font-size: 1.25em;\n      margin: 1.6em 0 0.6em 0;\n      line-height: 1.6;\n    }\n\n    && h4,\n    && h5,\n    && h6 {\n      color: ${prose.headings};\n      font-weight: 600;\n      font-size: 1.1em;\n      margin: 1.5em 0 0.5em 0;\n      line-height: 1.5;\n    }\n\n    && figure figcaption {\n      color: ${prose.captions};\n      font-size: 0.875em;\n      line-height: 1.4285714;\n      margin: 0.85em 0 0 0;\n    }\n\n    && code {\n      color: ${prose.code};\n      font-weight: 600;\n      font-size: 0.875em;\n      font-family: ${prose.fontMono};\n    }\n\n    && code::before {\n      content: '\\`';\n    }\n\n    && code::after {\n      content: '\\`';\n    }\n\n    && pre {\n      color: ${prose.preCode};\n      background-color: ${prose.preBg};\n      overflow-x: auto;\n      font-size: 0.875em;\n      font-family: ${prose.fontMono};\n      line-height: 1.7142857;\n      margin: 1.7em 0;\n      border-radius: 0.375rem;\n      padding: 0.85em 1.14em;\n    }\n\n    && pre code {\n      background-color: transparent;\n      border-width: 0;\n      border-radius: 0;\n      padding: 0;\n      font-weight: 400;\n      color: inherit;\n      font-size: inherit;\n      font-family: inherit;\n      line-height: inherit;\n    }\n\n    && pre code::before {\n      content: '';\n    }\n\n    && pre code::after {\n      content: '';\n    }\n\n    && table {\n      width: 100%;\n      table-layout: auto;\n      text-align: left;\n      margin: 2em 0;\n      font-size: 0.875em;\n      line-height: 1.7142857;\n      border-collapse: collapse;\n    }\n\n    && thead th {\n      font-weight: 600;\n      border-bottom: 1px solid ${prose.thBorders};\n      vertical-align: bottom;\n      padding: 0 0.5em 0.5em 0.5em;\n    }\n\n    && tbody td {\n      vertical-align: top;\n      padding: 0.5em;\n    }\n\n    && tbody tr:not(:last-child) td {\n      border-bottom: 1px solid ${prose.tdBorders};\n    }\n\n    && img,\n    && video,\n    && figure {\n      margin: 2em 0;\n    }\n\n    && figure > * {\n      margin: 0;\n    }\n\n    && h2 code {\n      font-size: 0.875em;\n    }\n\n    && h3 code {\n      font-size: 0.9em;\n    }\n\n    && > ul > li p {\n      margin: 0.75em 0;\n    }\n\n    /* first-child, but in a way that emotion doesn't cry */\n    && > ul > li > :not(* + *),\n    && > ol > li > :not(* + *) {\n      margin-top: 1.25em;\n    }\n\n    && > ul > li > :last-child,\n    && > ol > li > :last-child {\n      margin-bottom: 1.25em;\n    }\n\n    && ul ul,\n    && ul ol,\n    && ol ul,\n    && ol ol {\n      margin: 0.75em 0;\n    }\n\n    && hr + *,\n    && h2 + *,\n    && h3 + *,\n    && h4 + *,\n    && h5 + *,\n    && h6 + * {\n      margin-top: 0;\n    }\n\n    && thead tr th:first-of-type,\n    && tbody tr td:first-of-type {\n      padding-left: 0;\n    }\n\n    && thead tr th:last-of-type,\n    && tbody tr td:last-of-type {\n      padding-right: 0;\n    }\n\n    && > :not(* + *) {\n      margin-top: 0;\n    }\n\n    && > :last-child {\n      margin-bottom: 0;\n    }\n  `;\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { INotification } from '@magicbell/react-headless';\nimport { useEffect, useRef } from 'react';\nimport { cancel, render } from 'timeago.js';\n\nimport { useProse } from '../ClickableNotification/prose';\n\nexport interface Props {\n  notification: INotification;\n  prose?: boolean;\n}\n\n/**\n * Component that renders the summary of a notification. The content of the\n * notification is compiled as a liquid template.\n *\n * @example\n * <NotificationContent notification={notification} />\n */\nexport default function NotificationContent({ notification, prose: withProse = true }: Props) {\n  const { sanitizedContent: markup } = notification;\n  const ref = useRef<HTMLElement>(null);\n\n  const prose = useProse();\n\n  // TODO: Move this to a plugin framework\n  useEffect(() => {\n    if (!ref.current) return;\n    const nodes = ref.current.querySelectorAll('time[datetime]');\n    if (nodes.length > 0) render(nodes);\n\n    return () => {\n      cancel();\n    };\n  }, [markup]);\n\n  if (!markup || markup.replace(/(\\n|\\s|\\r)/gi, '') === '') return null;\n\n  const style = css`\n    color: inherit !important;\n    cursor: inherit;\n    margin: 0;\n    line-height: ${withProse ? 'inherit' : '1.5 !important'};\n    margin-top: 8px !important;\n    word-break: break-word !important;\n  `;\n\n  return <article ref={ref} css={withProse ? [style, prose] : style} dangerouslySetInnerHTML={{ __html: markup }} />;\n}\n","import React from 'react';\n\n/**\n * SVG with 3 vertical dots.\n *\n * @example\n * <MenuIcon  />\n */\nexport default function MenuIcon() {\n  return (\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <circle cx=\"18\" cy=\"12\" r=\"1.5\" fill=\"currentColor\" />\n      <circle cx=\"12\" cy=\"12\" r=\"1.5\" fill=\"currentColor\" />\n      <circle cx=\"6\" cy=\"12\" r=\"1.5\" fill=\"currentColor\" />\n    </svg>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { INotification } from '@magicbell/react-headless';\n\nimport { useTheme } from '../../context/MagicBellThemeContext';\nimport { toRGBA } from '../../lib/color';\nimport Text from '../Text';\n\nexport interface Props {\n  notification: INotification;\n}\n\n/**\n * Context menu for the clickable notification. Renders a menu with two items:\n * \"Mark as read\" and \"Delete\".\n *\n * @example\n * <NotificationContextMenu notification={notification} />\n */\nexport default function NotificationContextMenu({ notification }: Props) {\n  const { isRead, markAsUnread, markAsRead } = notification;\n  const theme = useTheme();\n  const {\n    container: containerTheme,\n    notification: { default: notificationTheme },\n  } = theme;\n\n  const handleDelete = () => notification.delete();\n  const toggleRead = () => (isRead ? markAsUnread() : markAsRead());\n\n  return (\n    <div\n      onClick={(e) => e.preventDefault()}\n      css={css`\n        background: ${containerTheme.backgroundColor} !important;\n        border-radius: 4px !important;\n        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n        padding: 4px 0 !important;\n        color: ${notificationTheme.textColor} !important;\n        font-family: ${notificationTheme.fontFamily} !important;\n        font-size: ${notificationTheme.fontSize} !important;\n        text-transform: ${notificationTheme.textTransform} !important;\n        min-width: 10em;\n\n        button {\n          display: block;\n          padding: 0.75em 1.25em !important;\n          width: 100%;\n          text-align: left;\n          background-color: ${toRGBA(\n            notificationTheme.backgroundColor,\n            notificationTheme.backgroundOpacity,\n          )} !important;\n\n          &:hover {\n            background-color: ${toRGBA(\n              notificationTheme.hover.backgroundColor,\n              notificationTheme.hover.backgroundOpacity,\n            )} !important;\n          }\n\n          &:focus {\n            outline: none;\n          }\n\n          &:focus-visible {\n            outline: 2px ${notificationTheme.textColor} solid !important;\n          }\n        }\n      `}\n    >\n      <button type=\"button\" onClick={toggleRead}>\n        {notification.isRead ? (\n          <Text id=\"notification.mark-as-unread\" defaultMessage=\"Mark as unread\" />\n        ) : (\n          <Text id=\"notification.mark-as-read\" defaultMessage=\"Mark as read\" />\n        )}\n      </button>\n      <button type=\"button\" onClick={handleDelete}>\n        <Text id=\"notification.delete\" defaultMessage=\"Delete\" />\n      </button>\n    </div>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { INotification } from '@magicbell/react-headless';\n\nimport { useTheme } from '../../context/MagicBellThemeContext';\nimport { useTranslate } from '../../context/TranslationsContext';\nimport MenuIcon from '../icons/MenuIcon';\nimport NotificationContextMenu from '../NotificationContextMenu';\nimport Popover from '../Popover';\n\nexport interface Props {\n  notification: INotification;\n  menuPlacement?:\n    | 'auto'\n    | 'auto-start'\n    | 'auto-end'\n    | 'top'\n    | 'bottom'\n    | 'right'\n    | 'left'\n    | 'top-start'\n    | 'top-end'\n    | 'bottom-start'\n    | 'bottom-end'\n    | 'right-start'\n    | 'right-end'\n    | 'left-start'\n    | 'left-end';\n}\n\n/**\n * Component that renders the context menu\n *\n * @example\n * <NotificationState notification={notification} />\n */\nexport default function NotificationMenu({ notification, menuPlacement = 'bottom-end' }: Props) {\n  const { notification: themeVariants } = useTheme();\n  const t = useTranslate();\n\n  const theme = !notification.isSeen\n    ? themeVariants.unseen\n    : !notification.isRead\n    ? themeVariants.unread\n    : themeVariants.default;\n\n  const launcher = (\n    <button\n      type=\"button\"\n      aria-label={t('notification.menu', 'Menu')}\n      css={css`\n        color: ${theme.textColor} !important;\n\n        &:focus {\n          outline: none;\n        }\n\n        &:focus-visible {\n          outline: 2px ${theme.textColor} auto !important;\n        }\n      `}\n      onClick={(e) => e.preventDefault()}\n    >\n      <MenuIcon />\n    </button>\n  );\n\n  return (\n    <Popover\n      launcher={launcher}\n      offset={{ skidding: -4, distance: 2 }}\n      placement={menuPlacement}\n      zIndex={1}\n      trigger=\"click\"\n    >\n      {() => <NotificationContextMenu notification={notification} />}\n    </Popover>\n  );\n}\n","import React from 'react';\n\n/**\n * SVG circle.\n *\n * @example\n * <DotIcon  />\n */\nexport default function DotIcon() {\n  return (\n    <svg width=\"6\" height=\"6\" viewBox=\"0 0 6 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <circle cx=\"3\" cy=\"3\" r=\"3\" fill=\"currentColor\" />\n    </svg>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { INotification } from '@magicbell/react-headless';\n\nimport { useTheme } from '../../context/MagicBellThemeContext';\nimport DotIcon from '../icons/DotIcon';\n\nexport interface Props {\n  notification: INotification;\n  menuPlacement?:\n    | 'auto'\n    | 'auto-start'\n    | 'auto-end'\n    | 'top'\n    | 'bottom'\n    | 'right'\n    | 'left'\n    | 'top-start'\n    | 'top-end'\n    | 'bottom-start'\n    | 'bottom-end'\n    | 'right-start'\n    | 'right-end'\n    | 'left-start'\n    | 'left-end';\n}\n\n/**\n * Component that renders a dot with style based on notification state\n *\n * @example\n * <NotificationState notification={notification} />\n */\nexport default function NotificationState({ notification }: Props) {\n  const { notification: themeVariants } = useTheme();\n\n  const theme = !notification.isSeen\n    ? themeVariants.unseen\n    : !notification.isRead\n    ? themeVariants.unread\n    : themeVariants.default;\n\n  return (\n    <div\n      css={css`\n        flex: none !important;\n        display: flex !important;\n        align-items: center !important;\n        justify-content: center !important;\n        width: 24px !important;\n        height: 24px !important;\n        color: ${theme.state.color} !important;\n      `}\n    >\n      <DotIcon />\n    </div>\n  );\n}\n","import dayjs, { Dayjs } from 'dayjs';\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport updateLocale from 'dayjs/plugin/updateLocale';\n\ndayjs.extend(localizedFormat);\ndayjs.extend(relativeTime);\ndayjs.extend(updateLocale);\n\ndayjs.updateLocale('en', {\n  relativeTime: {\n    future: 'in %s',\n    past: '%s ago',\n    s: '%ds',\n    m: '1m',\n    mm: '%dm',\n    h: '1h',\n    hh: '%dh',\n    d: '1d',\n    dd: '%dd',\n    M: '1mo',\n    MM: '%dmo',\n    y: '1y',\n    yy: '%dy',\n  },\n});\n\n/**\n * Function to build a Date given a number of seconds.\n *\n * @example secondsToDate(1582263571)\n */\nexport function secondsToDate(seconds: number | null) {\n  return seconds ? toDate(seconds * 1000) : null;\n}\n\n/**\n * Function to build a Date given a string or number of milliseconds.\n *\n * @example toDate('2020-02-01')\n */\nexport function toDate(date: string | number | Dayjs | Date) {\n  return dayjs(date);\n}\n\n/**\n * Function to return a UNIX timestamp from a date representation. This value is\n * floored to the nearest second.\n *\n * @example toUnix('2020-10-06')\n */\nexport function toUnix(date?: string | number | Dayjs | Date) {\n  return dayjs(date).unix();\n}\n","import { Dayjs } from 'dayjs';\nimport React, { useState } from 'react';\nimport useInterval from 'react-use/lib/useInterval';\n\nimport { toDate } from '../../lib/date';\nimport Tooltip, { TooltipProps } from '../Tooltip/Tooltip';\n\nexport interface Props {\n  date: Dayjs | Date | number | string;\n  tooltipPlacement?: TooltipProps['placement'];\n  delay?: TooltipProps['delay'];\n}\n\n/**\n * Component to render a date or timestamp as relative time.\n *\n * @example\n * <Timestamp date={new Date()} />\n */\nexport default function Timestamp({ date, tooltipPlacement = 'bottom-end', delay = 250 }: Props) {\n  const [dateObj] = useState(() => toDate(date));\n  const [relativeTime, setRelativeTime] = useState(dateObj.fromNow(true));\n\n  useInterval(() => setRelativeTime(dateObj.fromNow(true)), 60_000);\n\n  return (\n    <Tooltip tooltip={dateObj.format('LL LT')} placement={tooltipPlacement} delay={delay}>\n      <div>{relativeTime}</div>\n    </Tooltip>\n  );\n}\n","import { INotification } from '@magicbell/react-headless';\n\n/**\n * Function that opens the `actionUrl` of a notification in the same window.\n *\n * @param notification The notification\n */\nexport function openActionUrl(notification: INotification) {\n  if (notification.actionUrl) window.open(notification.actionUrl, '_self');\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { INotification } from '@magicbell/react-headless';\n\nimport { useTheme } from '../../context/MagicBellThemeContext';\n\nexport interface Props {\n  notification: INotification;\n}\n\n/**\n * Component that renders the title of a notification.\n *\n * @example\n * <NotificationTitle notification={notification} />\n */\nexport default function NotificationTitle({ notification }: Props) {\n  const { title } = notification;\n\n  const {\n    notification: {\n      default: { title: theme },\n    },\n  } = useTheme();\n\n  return (\n    <p\n      id={`magicbell-notification-title-${notification.id}`}\n      css={css`\n        cursor: inherit;\n        font-weight: ${theme.fontWeight} !important;\n        font-family: ${theme.fontFamily} !important;\n        font-size: ${theme.fontSize} !important;\n        color: inherit !important;\n        line-height: 1.2 !important;\n        word-break: break-word !important;\n      `}\n    >\n      {title}\n    </p>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { INotification } from '@magicbell/react-headless';\nimport { HTMLAttributes, ReactNode } from 'react';\n\nimport { useTheme } from '../../context/MagicBellThemeContext';\nimport { toRGBA } from '../../lib/color';\nimport { cleanslate } from '../Styled';\n\nexport type Props = {\n  notification: INotification;\n  children: ReactNode;\n} & HTMLAttributes<HTMLDivElement>;\n\n/**\n * A container for the `ClickableNotification` component. The style is taken\n * from the theme.\n *\n * @example\n * <StyledContainer notification={notification} onClick={openActionUrl} />\n */\nexport default function StyledContainer({ notification, children, ...props }: Props) {\n  const { notification: themeVariants } = useTheme();\n\n  const theme = !notification.isSeen\n    ? themeVariants.unseen\n    : !notification.isRead\n    ? themeVariants.unread\n    : themeVariants.default;\n\n  const style = css`\n    background-color: ${toRGBA(theme.backgroundColor, theme.backgroundOpacity)} !important;\n    border-radius: ${theme.borderRadius} !important;\n    color: ${theme.textColor} !important;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    font-family: ${theme.fontFamily} !important;\n    font-size: ${theme.fontSize} !important;\n    margin: ${theme.margin} !important;\n    padding: ${theme.padding} !important;\n    text-align: ${theme.textAlign} !important;\n    text-transform: ${theme.textTransform};\n    transition: background-color 300ms ease-out;\n    min-height: 32px;\n    position: relative !important;\n\n    &:hover {\n      background-color: ${toRGBA(theme.hover.backgroundColor, theme.hover.backgroundOpacity)} !important;\n    }\n\n    & > * {\n      position: relative;\n    }\n  `;\n\n  return (\n    <div css={[cleanslate, style]} {...props}>\n      {children}\n    </div>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { INotification, IRemoteNotification, useNotification } from '@magicbell/react-headless';\n\nimport { useTheme } from '../../context/MagicBellThemeContext';\nimport NotificationContent from '../NotificationContent';\nimport NotificationMenu from '../NotificationMenu';\nimport NotificationState from '../NotificationState';\nimport Timestamp from '../Timestamp';\nimport { openActionUrl } from './eventHandlers';\nimport NotificationTitle from './NotificationTitle';\nimport StyledContainer from './StyledContainer';\n\nexport interface Props {\n  notification: IRemoteNotification;\n  onClick?: (notification: INotification) => void | boolean;\n  prose?: boolean;\n}\n\n/**\n * Component that renders a notification. When the notification is clicked the\n * `onClick` callback is called and the notification is marked as read.\n *\n * @example\n * <ClickableNotification notification={notification} onClick={openActionUrl} />\n */\nexport default function ClickableNotification({ notification: rawNotification, onClick, prose }: Props) {\n  const {\n    notification: { default: theme },\n  } = useTheme();\n  const notification = useNotification(rawNotification);\n\n  const handleClick = (event) => {\n    // ignore event when user clicks inside the menu\n    if (event.isDefaultPrevented()) return;\n    const markAsReadPromise = notification.markAsRead();\n\n    // We don't want to invoke the action url when the user clicks a link or button inside the notification.\n    // Notification content should take precedence.\n    const isActionableElement = /^(a|button|input)$/i.test(event.target.tagName);\n\n    if (isActionableElement) return;\n    const onClickResult = onClick?.(notification);\n    if (onClickResult === false) return;\n\n    if (notification.actionUrl) {\n      // We wait for the markAsRead before navigating to the new url, to prevent race conditions\n      // between mark and read, and fetching new data on page reload. But let's not wait forever.\n      const timeout = new Promise((resolve) => setTimeout(resolve, 1_000));\n      Promise.race([markAsReadPromise, timeout]).then(() => openActionUrl(notification));\n    }\n  };\n\n  const content = css`\n    margin: 0 8px !important;\n    width: 100%;\n  `;\n\n  const actions = css`\n    display: flex;\n    padding: 0 5px !important;\n    flex-direction: column;\n    align-items: flex-end;\n    margin-left: auto !important;\n    font-size: ${theme.fontSize} !important;\n  `;\n\n  return (\n    <StyledContainer\n      role=\"button\"\n      aria-labelledby={`magicbell-notification-title-${notification.id}`}\n      notification={notification}\n      onClick={handleClick}\n    >\n      <NotificationState notification={notification} />\n      <div css={content}>\n        <NotificationTitle notification={notification} />\n        <NotificationContent notification={notification} prose={prose} />\n      </div>\n      <div css={actions}>\n        {notification.sentAt ? <Timestamp date={notification.sentAt} tooltipPlacement=\"left\" /> : <div />}\n        <NotificationMenu notification={notification} />\n      </div>\n    </StyledContainer>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\n\nexport default function Loader() {\n  return (\n    <div\n      css={css`\n        color: inherit !important;\n        font-size: 0.85em !important;\n        padding: 0.5em !important;\n        text-align: center !important;\n      `}\n    >\n      Loading...\n    </div>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { INotification, IRemoteNotification, useNotifications } from '@magicbell/react-headless';\nimport React from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport ClickableNotification from '../ClickableNotification';\nimport Loader from './Loader';\n\ntype NotificationStore = ReturnType<typeof useNotifications>;\n\nexport type NotificationListItem = (props: ListItemProps) => React.ReactElement;\nexport type ClickCallbackFn = (notification: INotification) => void | boolean;\n\nexport interface ListItemProps {\n  notification: IRemoteNotification;\n  onClick?: ClickCallbackFn;\n}\n\nexport interface NotificationListProps {\n  onItemClick?: ClickCallbackFn;\n  height?: number | string;\n  ListItem?: (props: ListItemProps) => React.ReactElement;\n  notifications: NotificationStore;\n  queryParams?;\n  scrollableTarget?: React.ReactNode;\n}\n\n/**\n * Infinite scroll list of notifications. Fetches the next page of the\n * notifications store when the user scrolls to the bottom of the list.\n *\n * @example\n * <NotificationList\n *   notifications={new NotificationStore()}\n *   queryParams={{ read: false }}\n *   onItemClick={openNotification}\n *   ListItem={Notification} />\n */\nexport default function NotificationList({\n  notifications: store,\n  onItemClick,\n  height,\n  queryParams,\n  scrollableTarget,\n  ListItem = ClickableNotification,\n}: NotificationListProps) {\n  const style = css`\n    height: 100%;\n\n    & .infinite-scroll-component__outerdiv {\n      height: 100%;\n    }\n\n    & .infinite-scroll-component {\n      min-height: 100%;\n    }\n  `;\n\n  return (\n    <div css={style}>\n      <InfiniteScroll\n        dataLength={store.notifications.length}\n        hasMore={store.hasNextPage}\n        next={() => store.fetchNextPage(queryParams)}\n        loader={<Loader />}\n        height={height}\n        scrollableTarget={scrollableTarget}\n      >\n        {store.notifications.map((notification) => (\n          <ListItem key={notification.id} notification={notification} onClick={onItemClick} />\n        ))}\n      </InfiniteScroll>\n    </div>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { INotification, useNotifications } from '@magicbell/react-headless';\nimport { useState } from 'react';\n\nimport NotificationList from '../NotificationList';\nimport { NotificationListItem } from '../NotificationList/NotificationList';\n\ntype NotificationStore = ReturnType<typeof useNotifications>;\n\nexport interface NotificationInboxContentProps {\n  height?: number;\n  onNotificationClick?: (notification: INotification) => void;\n  store: NotificationStore;\n  NotificationItem?: NotificationListItem;\n}\n\n/**\n * Component that renders an infinite scroll list of notifications, or error\n * messages if the list can't be fetched.\n *\n * @example\n * <NotificationInboxContent\n *   store={notifications}\n *   onNotificationClick={openTicket}\n *   height={500} />\n */\nexport default function NotificationInboxContent({\n  onNotificationClick,\n  store,\n  height,\n  NotificationItem,\n}: NotificationInboxContentProps) {\n  // we use a refSetter so that the height observer is reattached on a ref change\n  const [contentRef, setContentRef] = useState<any>(null);\n\n  return (\n    <div ref={setContentRef} css={{ width: '100%', height: height ?? '100%', overflow: 'auto' }}>\n      {contentRef ? (\n        <NotificationList\n          scrollableTarget={contentRef}\n          notifications={store}\n          onItemClick={onNotificationClick}\n          queryParams={store.context}\n          ListItem={NotificationItem}\n        />\n      ) : null}\n    </div>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { INotification, useConfig, useNotifications } from '@magicbell/react-headless';\nimport { pathOr } from 'ramda';\nimport { Fragment, ReactElement, useState } from 'react';\n\nimport { useTranslate } from '../../../context/TranslationsContext';\nimport EnablePushNotificationsBanner from '../../EnablePushNotificationsBanner';\nimport Footer from '../../Footer';\nimport Header from '../../Header';\nimport HeaderTabs, { HeaderTabsProps } from '../../Header/HeaderTabs';\nimport IconButton from '../../IconButton/IconButton';\nimport CheckMarkIcon from '../../icons/CheckMarkIcon';\nimport SettingsIcon from '../../icons/SettingsIcon';\nimport { ListItemProps } from '../../NotificationList';\nimport Text from '../../Text';\nimport ClearInboxMessage from '../ClearInboxMessage';\nimport Layout from '../Layout';\nimport { NotificationInboxProps, SetViewHandler } from '../NotificationInbox';\nimport NotificationInboxContent from '../NotificationInboxContent';\n\nexport type NotificationsViewProps = {\n  storeId?: string;\n  notificationPreferencesEnabled?: boolean;\n  setView: SetViewHandler;\n  layout: NonNullable<NotificationInboxProps['layout']>;\n  height?: number;\n  onAllRead?: () => void;\n  NotificationItem?: (props: ListItemProps) => ReactElement;\n  EmptyInboxPlaceholder?: () => ReactElement;\n  onNotificationClick?: (notification: INotification) => void | boolean;\n  tabs?: HeaderTabsProps['tabsConfig'];\n};\n\nexport default function NotificationsView({\n  layout,\n  storeId,\n  onNotificationClick,\n  onAllRead,\n  notificationPreferencesEnabled,\n  NotificationItem,\n  EmptyInboxPlaceholder = ClearInboxMessage,\n  setView,\n  tabs: tabsConfig,\n}: NotificationsViewProps) {\n  const t = useTranslate();\n  const config = useConfig();\n\n  const [activeStore, setActiveStore] = useState(storeId || tabsConfig?.[0].storeId);\n  const store = useNotifications(activeStore);\n\n  if (!store) return null;\n\n  const hasNotifications = !store.isEmpty;\n  const showPreferencesButton =\n    notificationPreferencesEnabled ?? pathOr(true, ['features', 'notificationPreferences', 'enabled'], config.inbox);\n\n  const handleMarkAllAsRead = () => {\n    store?.markAllAsRead();\n    onAllRead?.();\n  };\n\n  const showTabs = tabsConfig && activeStore;\n  const tabs = showTabs ? (\n    <HeaderTabs activeTab={activeStore} onChange={setActiveStore} tabsConfig={tabsConfig} />\n  ) : null;\n\n  const title = <Text id=\"header.title\" defaultMessage=\"Notifications\" />;\n\n  return (\n    <Layout order={layout}>\n      <Header\n        key=\"header\"\n        title={showTabs ? tabs : title}\n        actions={\n          <Fragment>\n            {hasNotifications ? (\n              <IconButton onClick={handleMarkAllAsRead} aria-label={t('header.mark-all-read', 'Mark all read')}>\n                <CheckMarkIcon />\n              </IconButton>\n            ) : null}\n\n            {showPreferencesButton ? (\n              <IconButton\n                onClick={() => setView('preferences')}\n                aria-label={t('preferences.toggle', 'Notification preferences')}\n              >\n                <SettingsIcon />\n              </IconButton>\n            ) : null}\n          </Fragment>\n        }\n      />\n\n      <div key=\"content\" css={{ flex: 1, overflowY: 'hidden' }}>\n        {!store.lastFetchedAt ? null : hasNotifications ? (\n          <NotificationInboxContent\n            store={store}\n            onNotificationClick={onNotificationClick}\n            NotificationItem={NotificationItem}\n          />\n        ) : (\n          <EmptyInboxPlaceholder />\n        )}\n      </div>\n\n      <EnablePushNotificationsBanner key=\"push-notifications-banner\" />\n\n      <Footer key=\"footer\" />\n    </Layout>\n  );\n}\n","import React from 'react';\n\ninterface Props {\n  id: string;\n  label?: string | React.ReactNode;\n  value?: boolean;\n  onClick: (value: boolean) => void;\n}\n\n/**\n * Toggle input.\n *\n * @example\n * <ToggleInput label=\"Enable notifications\" value={false} onClick={toggleNotifications} />\n */\nexport default function ToggleInput({ id, label, value = false, onClick }: Props) {\n  const handleClick = () => {\n    onClick(!value);\n  };\n\n  return (\n    <div>\n      {label ? (\n        <label htmlFor={id} style={{ marginRight: '14px' }}>\n          {label}\n        </label>\n      ) : null}\n      <input id={id} type=\"checkbox\" onClick={handleClick} defaultChecked={value} />\n    </div>\n  );\n}\n","import { IRemoteNotificationPreferences, useNotificationPreferences } from '@magicbell/react-headless';\nimport React from 'react';\n\nimport { useTranslate } from '../../context/TranslationsContext';\nimport ToggleInput from './ToggleInput';\n\ntype CategoryChannelPreference = IRemoteNotificationPreferences['categories'][number];\ntype ChannelPreference = CategoryChannelPreference['channels'][number];\n\ninterface CategoryPreferencesProps {\n  category: CategoryChannelPreference;\n  onChange?: (data: { category: CategoryChannelPreference }) => void;\n}\n\nexport default function CategoryPreferences({ category, onChange }: CategoryPreferencesProps) {\n  const preferences = useNotificationPreferences();\n  const channels = category.channels;\n  const t = useTranslate();\n\n  const updatePreferences = async (channel: ChannelPreference, channelEnabled: boolean) => {\n    const preference: CategoryChannelPreference = {\n      label: category.label,\n      slug: category.slug,\n      channels: [\n        {\n          label: channel.label,\n          slug: channel.slug,\n          enabled: channelEnabled,\n        },\n      ],\n    };\n\n    await preferences.save({ categories: [preference] });\n    onChange?.({ category: preference });\n  };\n\n  return (\n    <>\n      <div>{t(`preferences.categories.${category.slug}`, category.label)}</div>\n      {channels.map((channel) => (\n        <div key={channel.slug}>\n          <ToggleInput\n            id={`${category.slug}-${channel.slug}`}\n            value={channel.enabled}\n            onClick={(value) => updatePreferences(channel, value)}\n          />\n        </div>\n      ))}\n    </>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useNotificationPreferences } from '@magicbell/react-headless';\nimport { ComponentProps, useEffect, useMemo } from 'react';\n\nimport CategoryPreferences from './CategoryPreferences';\n\nexport type PreferencesCategoriesProps = {\n  channels?: Array<string>;\n  categories?: Array<string>;\n  onChange?: ComponentProps<typeof CategoryPreferences>['onChange'];\n};\n\nexport default function PreferencesCategories({\n  channels: selectedChannels,\n  categories: selectedCategories,\n  onChange,\n}: PreferencesCategoriesProps) {\n  const preferences = useNotificationPreferences();\n\n  const headerStyle = css`\n    opacity: 0.8;\n    text-transform: uppercase;\n    font-size: 0.7em !important;\n  `;\n\n  useEffect(() => {\n    if (!preferences.lastFetchedAt) {\n      preferences.fetch();\n    }\n  }, [preferences]);\n\n  const categories = useMemo(() => {\n    if (!preferences.categories?.length) {\n      return preferences.categories;\n    }\n\n    let categories = preferences.categories;\n\n    if (selectedCategories?.length) {\n      const categoriesSet = new Set(selectedCategories);\n      categories = categories.filter((category) => categoriesSet.has(category.slug));\n    }\n\n    if (selectedChannels?.length) {\n      const channelsSet = new Set(selectedChannels);\n      categories = categories.map((category) => ({\n        ...category,\n        channels: category.channels.filter((channel) => channelsSet.has(channel.slug)),\n      }));\n    }\n\n    return categories;\n  }, [preferences.categories, selectedChannels, selectedCategories]);\n\n  if (!categories.length) {\n    // TODO: Consider providing an \"empty\" screen or some other way to let the\n    // user know they have no categories and could go create some.\n    return null;\n  }\n\n  const channelHeaders = categories[0].channels;\n\n  return (\n    <div\n      css={css`\n        flex: 1;\n        padding: 16px 20px !important;\n        height: 100%;\n        overflow-y: auto;\n      `}\n    >\n      <div\n        css={css`\n          display: grid;\n          gap: 1em;\n          grid-template-columns: 2fr ${' 1fr'.repeat(channelHeaders.length).trim()};\n        `}\n      >\n        <div />\n\n        {channelHeaders.map((header) => (\n          <div key={header.slug} css={headerStyle}>\n            {header.label}\n          </div>\n        ))}\n\n        {categories.map((category) => (\n          <CategoryPreferences key={category.slug} category={category} onChange={onChange} />\n        ))}\n      </div>\n    </div>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { ReactElement } from 'react';\n\nimport { useTranslate } from '../../../context/TranslationsContext';\nimport Footer from '../../Footer';\nimport Header from '../../Header';\nimport IconButton from '../../IconButton/IconButton';\nimport Text from '../../Text';\nimport CloseIcon from '../../UserPreferencesPanel/CloseIcon';\nimport PreferencesCategories, { PreferencesCategoriesProps } from '../../UserPreferencesPanel/PreferencesCategories';\nimport Layout from '../Layout';\nimport { NotificationInboxProps, SetViewHandler } from '../NotificationInbox';\n\n// TODO: Remove null when PreferencesCategories or PreferencesView has been\n//  updated to support a preferences page.\ntype PreferencesViewProps = {\n  setView: SetViewHandler;\n  layout: NonNullable<NotificationInboxProps['layout']>;\n  NotificationPreferences?: (props: PreferencesCategoriesProps) => ReactElement | null;\n};\n\nexport default function PreferencesView({\n  layout,\n  setView,\n  NotificationPreferences = PreferencesCategories,\n}: PreferencesViewProps) {\n  const t = useTranslate();\n\n  return (\n    <Layout order={layout}>\n      <Header\n        key=\"header\"\n        title={<Text id=\"preferences.title\" defaultMessage=\"Preferences\" />}\n        actions={\n          <IconButton onClick={() => setView('inbox')} aria-label={t('preferences.close', 'Close preferences')}>\n            <CloseIcon />\n          </IconButton>\n        }\n      />\n\n      <div key=\"content\" css={{ flex: 1, overflowY: 'hidden' }}>\n        <NotificationPreferences />\n      </div>\n\n      <Footer key=\"footer\" />\n    </Layout>\n  );\n}\n","import { useTheme } from '../../context/MagicBellThemeContext';\n\n/**\n * Hook to get the right border radius for the notification inbox.\n *\n * E.g.: If the header is the first element, its defined border radius will be\n * applied to the container top corners. If it is the last element, its border\n * radius will be applied to the bottom corners of the container.\n *\n * @param layout Layout used to sort components in the notification inbox\n * @returns An array containing the rules for the border radius sorted (CSS order).\n */\nexport default function useContainerBorderRadius(layout: string[]) {\n  const theme = useTheme();\n  const { container: containerTheme, header: headerTheme, footer: footerTheme } = theme;\n\n  let firstComponentTheme = headerTheme;\n  if (layout[0] === 'footer') firstComponentTheme = footerTheme;\n  else if (layout[0] === 'container') firstComponentTheme = containerTheme;\n\n  let lastComponentTheme = footerTheme;\n  if (layout[layout.length - 1] === 'header') lastComponentTheme = headerTheme;\n  else if (layout[layout.length - 1] === 'container') lastComponentTheme = containerTheme;\n\n  return [\n    firstComponentTheme.borderRadius,\n    firstComponentTheme.borderRadius,\n    lastComponentTheme.borderRadius,\n    lastComponentTheme.borderRadius,\n  ];\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\n\nimport { useTheme } from '../../context/MagicBellThemeContext';\nimport { cleanslate } from '../Styled';\nimport useContainerBorderRadius from './useContainerBorderRadius';\n\ninterface StyledContainerProps {\n  height?: number;\n  children: React.ReactElement | React.ReactElement[];\n  layout: string[];\n}\n\n/**\n * Container for the notification inbox.\n *\n * @example\n * <StyledContainer height={500}>\n *   <p>Cannot fetch notifications</p>\n * </StyledContainer>\n */\nexport default function StyledContainer({ height, children, layout }: StyledContainerProps) {\n  const { container: theme } = useTheme();\n  const [ltBorderRadius, rtBorderRadius, rbBorderRadius, lbBorderRadius] = useContainerBorderRadius(layout);\n\n  return (\n    <div\n      css={[\n        cleanslate,\n        css`\n          background-color: ${theme.backgroundColor};\n          border-radius: ${ltBorderRadius} ${rtBorderRadius} ${rbBorderRadius} ${lbBorderRadius};\n          color: ${theme.textColor};\n          display: flex;\n          flex-direction: column;\n          font-family: ${theme.fontFamily} !important;\n          font-weight: ${theme.fontWeight} !important;\n          height: ${height ? `${height}px` : 'auto'};\n          overflow: hidden;\n          border: ${theme.borderColor ? `1px solid ${theme.borderColor} !important` : undefined};\n          box-shadow: ${theme.boxShadow ? `${theme.boxShadow} !important` : undefined};\n        `,\n      ]}\n    >\n      {children}\n    </div>\n  );\n}\n","import { INotification } from '@magicbell/react-headless';\nimport React, { ComponentProps, Dispatch, SetStateAction, useState } from 'react';\n\nimport { useMagicBellContext } from '../../context/MagicBellContext';\nimport { NotificationListItem } from '../NotificationList/NotificationList';\nimport Layout from './Layout';\nimport NotificationsView, { NotificationsViewProps } from './private/NotificationsView';\nimport PreferencesView from './private/PreferencesView';\nimport StyledContainer from './StyledContainer';\n\nexport type NotificationInboxProps = {\n  height?: number;\n  onAllRead?: () => void;\n  onNotificationClick?: (notification: INotification) => void | boolean;\n  storeId?: string;\n  EmptyInboxPlaceholder?: () => React.ReactElement;\n  NotificationItem?: NotificationListItem;\n  NotificationPreferences?: () => React.ReactElement;\n  notificationPreferencesEnabled?: boolean;\n  layout?: ComponentProps<typeof Layout>['order'];\n  tabs?: NotificationsViewProps['tabs'];\n};\n\nexport type SetViewHandler = Dispatch<SetStateAction<'inbox' | 'preferences'>>;\n\n/**\n * Component that renders all notifications as well as a header and a footer.\n *\n * @example\n * <NotificationInbox\n *   storeId=\"unread\"\n *   onNotificationClick={openTicket}\n *   onAllRead={showAlert} />\n */\nexport default function NotificationInbox({\n  height,\n  layout = ['header', 'content', 'push-notifications-banner', 'footer'],\n  tabs,\n  ...props\n}: NotificationInboxProps) {\n  const [view, setView] = useState<'inbox' | 'preferences'>('inbox');\n  const { isFetchingConfig } = useMagicBellContext();\n  if (isFetchingConfig) return null;\n\n  return (\n    <StyledContainer height={height} layout={layout}>\n      {view === 'preferences' ? (\n        <PreferencesView {...props} layout={layout} setView={setView} />\n      ) : (\n        <NotificationsView {...props} tabs={tabs} layout={layout} setView={setView} />\n      )}\n    </StyledContainer>\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\n\nimport { useTheme } from '../../context/MagicBellThemeContext';\n\nexport interface Props {\n  placement:\n    | 'auto'\n    | 'auto-start'\n    | 'auto-end'\n    | 'top'\n    | 'bottom'\n    | 'right'\n    | 'left'\n    | 'top-start'\n    | 'top-end'\n    | 'bottom-start'\n    | 'bottom-end'\n    | 'right-start'\n    | 'right-end'\n    | 'left-start'\n    | 'left-end';\n}\n\n/**\n * Arrow component for popper.\n *\n * @example\n * <Arrow placement=\"right\" />\n */\nexport default function Arrow({ placement }: Props) {\n  const theme = useTheme();\n  const { header: headerTheme, footer: footerTheme } = theme;\n\n  return (\n    <div\n      data-popper-arrow\n      data-popper-placement={placement}\n      css={css`\n        &,\n        &:before {\n          position: absolute;\n          width: 18px !important;\n          height: 18px !important;\n          z-index: -1;\n          border-radius: 2px !important;\n        }\n\n        &:before {\n          content: '';\n          transform: rotate(45deg);\n          left: 0;\n        }\n\n        &[data-popper-placement^='top'] {\n          bottom: -4px;\n\n          &:before {\n            background: ${headerTheme.backgroundColor};\n          }\n        }\n\n        &[data-popper-placement^='bottom'] {\n          top: -4px;\n\n          &:before {\n            background: ${footerTheme.backgroundColor};\n          }\n        }\n\n        &[data-popper-placement^='left'] {\n          right: -4px;\n        }\n\n        &[data-popper-placement^='right'] {\n          left: -4px;\n        }\n      `}\n    />\n  );\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\n\ninterface Props {\n  attrs?;\n  children;\n  width?: number;\n  layout: string[];\n}\n\n/**\n * Styled container to wrap the notification inbox with.\n *\n * @example\n * <StyledPopoverContainer>\n *   <Notifications />\n * </StyledPopoverContainer>\n */\nexport default function StyledPopoverContainer({ width = 400, children, attrs }: Props) {\n  return (\n    <div\n      css={css`\n        width: ${width}px;\n        max-width: calc(100vw - 10px);\n      `}\n      {...attrs}\n    >\n      {children}\n    </div>\n  );\n}\n","import React, { ReactNode } from 'react';\n\nimport { NotificationInboxProps } from '../NotificationInbox';\nimport Popover, { PopoverPlacement, PopperOptions } from '../Popover';\nimport Arrow from './Arrow';\nimport StyledPopoverContainer from './StyledPopoverContainer';\n\nexport interface Props extends NotificationInboxProps {\n  isOpen: boolean;\n  toggle?: () => void;\n  launcherRef: React.RefObject<Element>;\n  placement?: PopoverPlacement;\n  width?: number;\n  closeOnClickOutside?: boolean;\n  popperOptions?: PopperOptions;\n  hideArrow?: boolean;\n  layout?: string[];\n  children: ReactNode | ReactNode[];\n}\n\n/**\n * Notification inbox in a popover.\n *\n * @example\n * <FloatingNotificationInbox height={400} toggle={() => void} isOpen />\n */\nexport default function FloatingInboxContainer({\n  launcherRef,\n  isOpen,\n  toggle,\n  placement = 'auto',\n  width = 500,\n  closeOnClickOutside = true,\n  popperOptions,\n  hideArrow = false,\n  layout = ['header', 'content', 'push-notifications-banner', 'footer'],\n  children,\n}: Props) {\n  const handleClickOutside = () => {\n    if (closeOnClickOutside) toggle?.();\n  };\n\n  return (\n    <Popover\n      isOpen={isOpen}\n      launcherRef={launcherRef}\n      onClickOutside={handleClickOutside}\n      placement={placement}\n      popperOptions={popperOptions}\n    >\n      {(attrs) => (\n        <StyledPopoverContainer width={width} attrs={attrs} layout={layout}>\n          {children}\n          {hideArrow ? null : <Arrow placement={attrs['data-placement']} />}\n        </StyledPopoverContainer>\n      )}\n    </Popover>\n  );\n}\n","import React from 'react';\n\nimport { useMagicBellContext } from '../../context/MagicBellContext';\nimport NotificationInbox, { NotificationInboxProps } from '../NotificationInbox';\nimport { NotificationListItem } from '../NotificationList/NotificationList';\nimport { PopoverPlacement, PopperOptions } from '../Popover';\nimport FloatingInboxContainer from './FloatingInboxContainer';\n\nexport interface Props extends NotificationInboxProps {\n  isOpen: boolean;\n  toggle?: () => void;\n  launcherRef: React.RefObject<Element>;\n  placement?: PopoverPlacement;\n  width?: number;\n  closeOnClickOutside?: boolean;\n  closeOnNotificationClick?: boolean;\n  popperOptions?: PopperOptions;\n  hideArrow?: boolean;\n  NotificationItem?: NotificationListItem;\n  layout?: string[];\n}\n\n/**\n * Notification inbox in a popover.\n *\n * @example\n * <FloatingNotificationInbox height={400} toggle={() => void} isOpen />\n */\nexport default function FloatingNotificationInbox({\n  launcherRef,\n  isOpen,\n  toggle,\n  placement = 'auto',\n  width = 500,\n  onNotificationClick,\n  closeOnClickOutside = true,\n  closeOnNotificationClick = true,\n  popperOptions,\n  hideArrow = false,\n  layout,\n  ...inboxProps\n}: Props) {\n  const handleNotificationClick = (notification) => {\n    if (closeOnNotificationClick) toggle?.();\n    return onNotificationClick?.(notification);\n  };\n\n  const { isFetchingConfig } = useMagicBellContext();\n  if (isFetchingConfig) return null;\n\n  return (\n    <FloatingInboxContainer\n      launcherRef={launcherRef}\n      isOpen={isOpen}\n      toggle={toggle}\n      placement={placement}\n      width={width}\n      closeOnClickOutside={closeOnClickOutside}\n      popperOptions={popperOptions}\n      hideArrow={hideArrow}\n      layout={layout}\n    >\n      <NotificationInbox onNotificationClick={handleNotificationClick} layout={layout} {...inboxProps} />\n    </FloatingInboxContainer>\n  );\n}\n","import { createContext } from 'react';\n\nexport const NO_PROVIDER = 'MAGICBELL_NO_PROVIDER';\n\nconst CurrentProviderContext = createContext<string>(NO_PROVIDER);\nexport default CurrentProviderContext;\n","const de = {\n  header: {\n    title: 'Benachrichtigungen',\n    'mark-all-read': 'Alle als gelesen markieren',\n  },\n  notification: {\n    'mark-as-read': 'Als gelesen markieren',\n    'mark-as-unread': 'Als ungelesen markieren',\n    delete: 'Löschen',\n    menu: 'Menu',\n  },\n  'web-push-notifications': {\n    notice: 'Wenn Sie Browser-Benachrichtigungen aktivieren, bleiben Sie noch besser auf dem Laufenden.',\n    'enable-now': 'Aktivieren',\n  },\n  messages: {\n    'empty-inbox': \"Alles Sauber!<br>Wir melden uns, wenn's was neues gibt!\",\n  },\n  preferences: {\n    title: 'Einstellungen',\n    toggle: 'Benachrichtigungseinstellungen',\n    close: 'Einstellungen schließen',\n  },\n};\n\nexport default de;\n","const es = {\n  header: {\n    title: 'Notificaciones',\n    'mark-all-read': 'Marcar todo como leído',\n  },\n  notification: {\n    'mark-as-read': 'Marcar como leído',\n    'mark-as-unread': 'Marcar como no leído',\n    delete: 'Eliminar',\n    menu: 'Menu',\n  },\n  'web-push-notifications': {\n    notice: 'Active notificaciones en su navegador para mantenerse actualizado',\n    'enable-now': 'Activar',\n  },\n  messages: {\n    'empty-inbox': '¡No tiene notificaciones!<br>Le haremos saber cuando llegue una.',\n  },\n  preferences: {\n    title: 'Preferencias',\n    toggle: 'Preferencias de notificación',\n    close: 'Cerrar preferencias',\n  },\n};\n\nexport default es;\n","const pt_br = {\n  header: {\n    title: 'Notificações',\n    'mark-all-read': 'Marcar tudo como lido',\n  },\n  notification: {\n    'mark-as-read': 'Marcar como lido',\n    'mark-as-unread': 'Marcar como não lido',\n    delete: 'Apagar',\n    menu: 'Menu',\n  },\n  'web-push-notifications': {\n    notice: 'Ao ativar as notificações do navegador, você ficará ainda melhor atualizado.',\n    'enable-now': 'Ativar',\n  },\n  messages: {\n    'empty-inbox': 'Nenhuma notificação disponível!',\n    'server-error': 'Não conseguimos recuperar suas notificações.<br>Por favor, volte em breve.',\n    'no-internet-connection': 'Não conseguimos nos conectar à Internet.<br>Por favor, verifique sua conexão.',\n  },\n  preferences: {\n    title: 'Preferências',\n    toggle: 'Preferências de notificação',\n    close: 'Fechar preferências',\n  },\n};\n\nexport default pt_br;\n","import 'dayjs/locale/es';\nimport 'dayjs/locale/pt-br';\nimport 'dayjs/locale/de';\n\nimport dayjs from 'dayjs';\nimport { mergeDeepRight } from 'ramda';\n\nimport de from './translations/de';\nimport es from './translations/es';\nimport pt_br from './translations/pt-br';\n\nexport type CustomLocale = {\n  name: string;\n  translations: any;\n};\n\nfunction setDayjsLocale(localeName: string) {\n  // All dayjs files are in lowercase and use hypens instead of underscores.\n  const standardLocaleName = localeName.toLowerCase().replace('_', '-');\n  dayjs.locale(standardLocaleName);\n}\n\n/**\n * Function to build localization data for the `TranslationsProvider`.\n *\n * @param locale\n */\nexport function useLocale(locale: string | CustomLocale) {\n  const localeName = typeof locale === 'string' ? locale : locale.name;\n  setDayjsLocale(localeName);\n\n  const defaultLocales = { es, pt_BR: pt_br, de };\n\n  if (typeof locale === 'string') {\n    return defaultLocales[locale];\n  } else {\n    const customLocales = mergeDeepRight(defaultLocales, { [localeName]: locale.translations });\n    return customLocales[localeName];\n  }\n}\n","import { clientSettings, MagicBellProvider as Provider } from '@magicbell/react-headless';\nimport React, { useEffect, useState } from 'react';\n\nimport CurrentProviderContext from '../../context/CurrentProviderContext';\nimport MagicBellContext from '../../context/MagicBellContext';\nimport { MagicBellThemeProvider } from '../../context/MagicBellThemeContext';\nimport { IMagicBellTheme } from '../../context/Theme';\nimport { TranslationsProvider } from '../../context/TranslationsContext';\nimport { CustomLocale, useLocale } from '../../lib/i18n';\nimport { DeepPartial } from '../../lib/types';\nimport { Props as MagicBellProps } from '../MagicBell/MagicBell';\n\nexport type MagicBellProviderProps = {\n  apiKey: string;\n  userEmail?: string;\n  userExternalId?: string;\n  userKey?: string;\n  children: React.ReactElement | React.ReactElement[];\n  theme?: DeepPartial<IMagicBellTheme>;\n  stores?: MagicBellProps['stores'];\n  locale?: string | CustomLocale;\n  images?: Partial<{\n    emptyInboxUrl: string;\n  }>;\n  serverURL?: string;\n  disableRealtime?: boolean;\n} & ({ userExternalId: string } | { userEmail: string });\n\nconst internals = {\n  appInfo: {\n    name: __PACKAGE_NAME__,\n    version: __PACKAGE_VERSION__,\n  },\n};\n\n/**\n * Provider component for Magicbell.\n *\n * @param props.apiKey API key of the MagicBell project\n * @param props.userEmail Email of the user whose notifications will be displayed\n * @param props.userExternalId External ID of the user whose notifications will be displayed\n * @param props.userKey Computed HMAC of the user whose notifications will be displayed, compute this with the secret of the magicbell project\n * @param props.theme Object to customize the theme\n * @param props.stores List of stores to be created\n * @param props.locale Locale to use in the components\n * @param props.disableRealtime Disable realtime updates\n *\n * @example\n * ```javascript\n * <MagicBellProvider apiKey={MAGICBELL_API_KEY} userEmail={email}>\n *   <App />\n * </MagicBellProvider>\n * ```\n */\nexport default function MagicBellProvider({ children, theme, images, locale, ...settings }: MagicBellProviderProps) {\n  return (\n    // provide private props like this, so it's not part of the public api,\n    // still can be overridden by the embeddable, and consumed by headless\n    <Provider {...internals} {...settings}>\n      <SettingsProviders {...settings} theme={theme} images={images} locale={locale}>\n        {children}\n      </SettingsProviders>\n    </Provider>\n  );\n}\n\nfunction SettingsProviders({ children, theme, locale, images, ...props }: MagicBellProviderProps) {\n  const needsRemoteConfig = !theme || !locale || !images;\n\n  const [config, setConfig] = useState<Pick<MagicBellProviderProps, 'theme' | 'images' | 'locale'>>({});\n  const [isFetchingConfig, setIsFetchingConfig] = useState(needsRemoteConfig);\n\n  useEffect(() => {\n    // Don't fetch remote theme config if all overrides are provided via props\n    if (!needsRemoteConfig) return;\n\n    const client = clientSettings.getState().getClient();\n    client\n      .request({\n        method: 'POST',\n        path: '/integrations/inbox/installations',\n      })\n      .then((response) => {\n        if (!('inbox' in response)) return;\n        setConfig(response.inbox);\n      })\n      .catch(() => void 0)\n      .finally(() => setIsFetchingConfig(false));\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [needsRemoteConfig, props.apiKey, props.userExternalId, props.userExternalId]);\n\n  const textTranslations = useLocale(locale || config.locale || 'en');\n\n  return (\n    <CurrentProviderContext.Provider value=\"DEFAULT_MAGICBELL\">\n      <TranslationsProvider value={textTranslations}>\n        <MagicBellThemeProvider value={theme || config.theme}>\n          <MagicBellContext.Provider value={{ images: images || config.images, isFetchingConfig }}>\n            {children}\n          </MagicBellContext.Provider>\n        </MagicBellThemeProvider>\n      </TranslationsProvider>\n    </CurrentProviderContext.Provider>\n  );\n}\n","import React, { useContext } from 'react';\n\nimport CurrentProviderContext, { NO_PROVIDER } from '../../context/CurrentProviderContext';\nimport MagicBellProvider, { MagicBellProviderProps } from './MagicBellProvider';\n\n/**\n * Component that conditionally wraps the children with a MagicBellProvider\n * unless one is defined already.\n */\nexport default function MagicBellChildrenWrapper({ children, apiKey, ...settings }: MagicBellProviderProps) {\n  const currentContext = useContext(CurrentProviderContext);\n\n  if (currentContext === NO_PROVIDER) {\n    if (!apiKey) return null;\n    return (\n      <MagicBellProvider apiKey={apiKey} {...settings}>\n        {children}\n      </MagicBellProvider>\n    );\n  }\n\n  return <>{children}</>;\n}\n","import { INotificationStore, IRemoteNotification, useMagicBellEvent } from '@magicbell/react-headless';\nimport React, { useRef } from 'react';\nimport useToggle from 'react-use/lib/useToggle';\n\nimport { IMagicBellTheme } from '../../context/Theme';\nimport { CustomLocale } from '../../lib/i18n';\nimport { DeepPartial } from '../../lib/types';\nimport Bell from '../Bell';\nimport FloatingNotificationInbox from '../FloatingNotificationInbox';\nimport MagicBellChildrenWrapper from '../MagicBellProvider/MagicBellChildrenWrapper';\n\ntype StoreConfig = {\n  id: string;\n  defaultQueryParams: {\n    read?: boolean;\n    seen?: boolean;\n    archived?: boolean;\n    categories?: string[];\n    topics?: string[];\n    [key: string]: unknown;\n  };\n  defaults?: Partial<Omit<INotificationStore, 'context'>>;\n};\n\nexport type Props = {\n  apiKey: string;\n  userEmail?: string;\n  userExternalId?: string;\n  userKey?: string;\n  children?: (params: { launcherRef: React.RefObject<Element>; isOpen: boolean; toggle: () => void }) => JSX.Element;\n  theme?: DeepPartial<IMagicBellTheme>;\n  BellIcon?: JSX.Element;\n  Badge?: (props: { count: number }) => JSX.Element;\n  defaultIsOpen?: boolean;\n  stores?: StoreConfig[];\n  locale?: string | CustomLocale;\n  images?: Partial<{\n    emptyInboxUrl: string;\n  }>;\n  serverURL?: string;\n  disableRealtime?: boolean;\n  onNewNotification?: (notification: IRemoteNotification) => void;\n  onToggle?: (isOpen: boolean) => void;\n  isOpen?: boolean;\n  bellCounter?: 'unread' | 'unseen';\n} & ({ userExternalId: string } | { userEmail: string });\n\nconst defaultInbox = (props) => <FloatingNotificationInbox height={500} {...props} />;\n\n/**\n * Magicbell root component. Use this one in your application.\n *\n * @param props.apiKey API key of the MagicBell project\n * @param props.userEmail Email of the user whose notifications will be displayed\n * @param props.userExternalId External ID of the user whose notifications will be displayed\n * @param props.userKey Computed HMAC of the user whose notifications will be displayed, compute this with the secret of the magicbell project\n * @param props.theme Object to customize the theme\n * @param props.BellIcon Icon for the bell\n * @param props.Badge A custom badge component to show the number of unread or unseen notifications\n * @param props.defaultIsOpen Show the children when the component is rendered. It is false by default.\n * @param props.stores Configuration of stores to be created\n * @param props.locale Locale to use in the components\n * @param props.onNewNotification Function called when a notification is created.\n * @param props.onToggle Function called when the bell is clicked.\n * @param props.isOpen Whether the notification inbox is open or not, use to control state.\n * @param props.bellCounter Counter to show in the bell. If set to 'unread' it will show the number of unread notifications.\n *\n * @example\n * <MagicBell\n *   apiKey={MAGICBELL_API_KEY}\n *   userEmail={email}\n *   BellIcon={<MyIcon />}\n * >\n *   {(props) => <NotificationInbox {...props} />}\n * </MagicBell>\n */\nexport default function MagicBell({\n  children = defaultInbox,\n  BellIcon,\n  Badge,\n  defaultIsOpen = false,\n  onNewNotification,\n  onToggle,\n  bellCounter = 'unseen',\n  isOpen: externalIsOpen,\n  ...settings\n}: Props) {\n  const launcherRef = useRef(null);\n  const isControlled = typeof externalIsOpen !== 'undefined';\n\n  const [internalIsOpen, toggleInternal] = useToggle(defaultIsOpen);\n  const isOpen = isControlled ? externalIsOpen : internalIsOpen;\n\n  const handleToggle = () => {\n    if (!isControlled) {\n      toggleInternal();\n    }\n\n    onToggle?.(!isOpen);\n  };\n\n  const handleNewNotification = (notification: IRemoteNotification) => {\n    onNewNotification?.(notification);\n  };\n\n  useMagicBellEvent('notifications.new', handleNewNotification);\n\n  return (\n    <MagicBellChildrenWrapper {...settings}>\n      <div>\n        <div ref={launcherRef} aria-expanded={isOpen}>\n          <Bell onClick={handleToggle} Icon={BellIcon} Badge={Badge} counter={bellCounter} />\n        </div>\n        {isOpen && children({ isOpen, toggle: handleToggle, launcherRef })}\n      </div>\n    </MagicBellChildrenWrapper>\n  );\n}\n","import { useConfig } from '@magicbell/react-headless';\nimport { isSupported, registerServiceWorker, subscribe } from '@magicbell/webpush';\nimport { useEffect } from 'react';\n\nexport interface Props {\n  children: (params: { createSubscription: () => Promise<any>; isPushAPISupported: boolean }) => JSX.Element;\n  serviceWorkerPath?: string;\n  skipServiceWorkerRegistration?: boolean;\n}\n\n/**\n * Headless component to create subscriptions to push notifications for the\n * current user.\n *\n * @example\n * <PushNotificationsSubscriber>\n *   {({ createSubscription }) => (\n *     <button onClick={createSubscription}>Subscribe</button>\n *   )}\n * <PushNotificationsSubscriber>\n */\nexport default function PushNotificationsSubscriber({\n  children,\n  serviceWorkerPath = '/service-worker.js',\n  skipServiceWorkerRegistration = false,\n}: Props) {\n  const config = useConfig();\n  const isPushAPISupported = isSupported();\n\n  useEffect(() => {\n    if (skipServiceWorkerRegistration) return;\n    registerServiceWorker({ path: serviceWorkerPath }).catch((error) => {\n      console.error(`Error registering service worker: ${error}`);\n    });\n  }, [serviceWorkerPath, skipServiceWorkerRegistration]);\n\n  const createSubscription = async () => {\n    if (!config || !config.channels) {\n      new Error('MagicBell Context was not found, did you wrap this in a MagicBellProvider?');\n    }\n\n    const url = new URL(config.channels.webPush.config.subscribeUrl || '');\n\n    return subscribe({\n      host: 'https://api.magicbell.com',\n      project: String(url.searchParams.get('project')),\n      token: String(url.searchParams.get('access_token')),\n      serviceWorkerPath,\n    });\n  };\n\n  return children({ createSubscription, isPushAPISupported });\n}\n","import { IMagicBellTheme } from '../context/Theme';\nimport { DeepPartial } from '../lib/types';\n\nconst fonts = {\n  sans: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif',\n  mono: `ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace`,\n};\n\nconst colors = {\n  bg: '#FFFFFF',\n  caption: '#0f172a',\n  text: '#3A424D',\n  stroke: '#e2e8f0',\n  accent: '#3498F4',\n  badge: '#DF4759',\n  transparent: 'transparent',\n};\n\nconst headerFooterProps: IMagicBellTheme['header'] & IMagicBellTheme['footer'] = {\n  backgroundColor: colors.accent,\n  backgroundOpacity: 1,\n  borderRadius: '8px',\n  fontFamily: fonts.sans,\n  fontSize: '14px',\n  fontWeight: 'inherit',\n  textAlign: 'left',\n  textColor: colors.bg,\n  textTransform: 'uppercase',\n};\n\nexport const classicTheme: DeepPartial<IMagicBellTheme> = {\n  prose: {\n    headings: colors.caption,\n    links: colors.caption,\n    bold: colors.caption,\n    hr: colors.stroke,\n    quotes: colors.text,\n    quoteBorders: colors.stroke,\n    captions: colors.caption,\n    code: colors.text,\n    preCode: colors.stroke,\n    preBg: colors.text,\n    thBorders: colors.stroke,\n    tdBorders: colors.stroke,\n    buttonBorders: colors.text,\n    buttons: colors.caption,\n    fontMono: fonts.mono,\n  },\n  icon: {\n    borderColor: colors.accent,\n  },\n  header: {\n    ...headerFooterProps,\n    padding: '16px 24px',\n  },\n  footer: {\n    ...headerFooterProps,\n    padding: '12px 24px',\n  },\n  banner: {\n    backgroundColor: colors.accent,\n    backgroundOpacity: 0.1,\n    textColor: colors.text,\n    fontFamily: fonts.sans,\n    textAlign: 'left',\n    fontSize: '12px',\n    boxShadow: 'none',\n  },\n  dialog: {\n    backgroundColor: colors.bg,\n    textColor: colors.text,\n    accentColor: colors.accent,\n  },\n  unseenBadge: {\n    backgroundColor: colors.badge,\n    backgroundOpacity: 1,\n    borderRadius: '2px',\n    fontFamily: fonts.sans,\n    fontWeight: 'inherit',\n    fontSize: '10px',\n    textAlign: 'center',\n    textColor: 'white',\n    textTransform: 'none',\n  },\n  container: {\n    backgroundColor: colors.bg,\n    fontFamily: fonts.sans,\n    fontSize: '12px',\n    textColor: colors.text,\n    boxShadow: '0px 20px 25px rgba(84, 95, 111, 0.1), 0px 10px 10px rgba(84, 95, 111, 0.04)',\n  },\n  notification: {\n    default: {\n      backgroundColor: 'transparent',\n      backgroundOpacity: 0,\n      borderRadius: '8px',\n      fontFamily: fonts.sans,\n      fontSize: '12px',\n      fontWeight: 'inherit',\n      textAlign: 'left',\n      textColor: colors.text,\n      textTransform: 'none',\n      margin: '4px',\n      padding: '16px 20px 16px 12px',\n      title: {\n        fontFamily: 'inherit',\n        fontSize: '14px',\n        fontWeight: 500,\n        textColor: colors.caption,\n      },\n      hover: {\n        backgroundColor: colors.accent,\n        backgroundOpacity: 0.1,\n      },\n      state: {\n        color: 'transparent',\n      },\n    },\n    unread: {\n      backgroundOpacity: 0,\n      state: {\n        color: colors.accent,\n      },\n    },\n    unseen: {\n      backgroundColor: colors.accent,\n      backgroundOpacity: 0.05,\n      state: {\n        color: colors.accent,\n      },\n    },\n  },\n};\n","import { IMagicBellTheme } from '../context/Theme';\nimport { DeepPartial } from '../lib/types';\nimport { fonts } from './light';\n\nconst colors = {\n  bg: '#FFFFFF',\n  caption: '#15091F',\n  text: '#3A424D',\n  stroke: '#EFEEF1',\n  accent: '#5225C1',\n  badge: '#F80808',\n  bgHighlight: '#F7F6F9',\n  bgActive: '#F0EDF8',\n  transparent: 'transparent',\n};\n\nconst headerFooterProps: DeepPartial<IMagicBellTheme['header'] & IMagicBellTheme['footer']> = {\n  backgroundColor: colors.bg,\n  borderRadius: '8px',\n  textColor: colors.accent,\n  borderColor: colors.stroke,\n};\n\nexport const flatTheme: DeepPartial<IMagicBellTheme> = {\n  prose: {\n    headings: colors.caption,\n    links: colors.caption,\n    bold: colors.caption,\n    hr: colors.stroke,\n    quotes: colors.text,\n    quoteBorders: colors.stroke,\n    captions: colors.caption,\n    code: colors.text,\n    preCode: colors.stroke,\n    preBg: colors.text,\n    thBorders: colors.stroke,\n    tdBorders: colors.stroke,\n    buttonBorders: colors.text,\n    buttons: colors.caption,\n  },\n  icon: {\n    borderColor: colors.accent,\n  },\n  header: headerFooterProps,\n  footer: headerFooterProps,\n  banner: {\n    backgroundColor: colors.bg,\n    backgroundOpacity: 1,\n    textColor: colors.text,\n    fontFamily: fonts.sans,\n    textAlign: 'left',\n    fontSize: '12px',\n    boxShadow: `inset 0 1px 0 0 ${colors.stroke}`,\n  },\n  dialog: {\n    backgroundColor: colors.bg,\n    textColor: colors.text,\n    accentColor: colors.accent,\n  },\n  unseenBadge: {\n    backgroundColor: colors.badge,\n  },\n  container: {\n    backgroundColor: colors.bg,\n    textColor: colors.text,\n    boxShadow: 'none',\n    borderColor: colors.accent,\n  },\n  notification: {\n    default: {\n      backgroundColor: colors.bgHighlight,\n      borderRadius: '0',\n      textColor: colors.text,\n      margin: '0',\n      title: {\n        textColor: colors.caption,\n      },\n      hover: {\n        backgroundColor: colors.bgActive,\n        backgroundOpacity: 1,\n      },\n      state: {\n        color: colors.transparent,\n      },\n    },\n    unread: {\n      backgroundColor: colors.bg,\n      hover: {\n        backgroundColor: colors.bgActive,\n      },\n      state: {\n        color: colors.accent,\n      },\n    },\n    unseen: {\n      backgroundColor: colors.bg,\n      hover: {\n        backgroundColor: colors.bgActive,\n      },\n      state: {\n        color: colors.accent,\n      },\n    },\n  },\n};\n"],"names":["MagicBellContext","createContext","MagicBellContext$1","useMagicBellContext","useContext","toRGBA","baseColor","alpha","color","tinycolor","darken","amount","merge","unapply","pipe","filter","compose","not","isNil","reduce","mergeDeepRight","fonts","colors","prose","icon","tabs","header","footer","__spreadProps","__spreadValues","banner","unseenBadge","container","defaultNotification","unreadNotification","dialog","lightTheme","defaultTheme","MagicBellThemeContext","MagicBellThemeProvider","_a","_b","partialTheme","props","__objRest","theme","useMemo","merged","key","x","_c","variant","_d","_e","current","_g","_f","_i","_h","_j","_k","useTheme","MagicBellThemeContext$1","cleanslate","css","cleanslate$1","Badge","count","badgeTheme","style","jsx","BellBadge","iconTheme","BellIcon","jsxs","Bell","Icon","onClick","storeId","counter","notifications","useBell","isFetchingConfig","handleClick","containerStyle","iconStyle","TranslationsContext","TranslationsProvider","useTranslations","useTranslate","translations","useCallback","id","defaultMessage","pathOr","openWindow","url","top","left","Text","html","localizedText","CloseIcon","CloseBannerButton","EnablePushNotificationsButton","EnablePushNotificationsBanner","channels","useConfig","isWebPushEnabled","apiKey","userEmail","userExternalId","clientSettings","wasRequested","setRequestedAt","useLocalStorage","enablePushNotifications","subscribeUrl","path","accentColor","backgroundColor","textColor","closeBanner","MagicBellLogo","FooterLogo","inboxConfig","state","hideBranding","StyledFooter","children","footerTheme","Footer","contentStyle","SettingsIcon","StyledHeader","headerTheme","Header","title","actions","isTab","child","Tab","Tabs","active","onChange","Children","idx","value","HeaderTabs","tabsConfig","activeTab","label","Popover","closeOnClick","isOpen","launcher","launcherRef","offset","onClickOutside","placement","popperOptions","zIndex","trigger","triggerProps","handleClickOutside","Tippy","Tooltip","tooltip","containerTheme","notificationTheme","tipStyle","IconButton","forwardRef","ref","tooltipPlacement","IconButton$1","CheckMarkIcon","ClearInboxMessage","images","Layout","order","Fragment","useProse","NotificationContent","notification","withProse","markup","useRef","useEffect","nodes","render","cancel","MenuIcon","NotificationContextMenu","isRead","markAsUnread","markAsRead","handleDelete","toggleRead","e","NotificationMenu","menuPlacement","themeVariants","t","DotIcon","NotificationState","dayjs","localizedFormat","relativeTime","updateLocale","toDate","date","Timestamp","delay","dateObj","useState","setRelativeTime","useInterval","openActionUrl","NotificationTitle","StyledContainer","ClickableNotification","rawNotification","useNotification","event","markAsReadPromise","timeout","resolve","content","Loader","NotificationList","store","onItemClick","height","queryParams","scrollableTarget","ListItem","InfiniteScroll","NotificationInboxContent","onNotificationClick","NotificationItem","contentRef","setContentRef","NotificationsView","layout","onAllRead","notificationPreferencesEnabled","EmptyInboxPlaceholder","setView","config","activeStore","setActiveStore","useNotifications","hasNotifications","showPreferencesButton","handleMarkAllAsRead","showTabs","ToggleInput","CategoryPreferences","category","preferences","useNotificationPreferences","updatePreferences","channel","channelEnabled","preference","PreferencesCategories","selectedChannels","selectedCategories","headerStyle","categories","categoriesSet","channelsSet","channelHeaders","PreferencesView","NotificationPreferences","useContainerBorderRadius","firstComponentTheme","lastComponentTheme","ltBorderRadius","rtBorderRadius","rbBorderRadius","lbBorderRadius","NotificationInbox","view","Arrow","StyledPopoverContainer","width","attrs","FloatingInboxContainer","toggle","closeOnClickOutside","hideArrow","FloatingNotificationInbox","closeOnNotificationClick","inboxProps","handleNotificationClick","NO_PROVIDER","CurrentProviderContext","CurrentProviderContext$1","de","de$1","es","es$1","pt_br","pt_br$1","setDayjsLocale","localeName","standardLocaleName","useLocale","locale","defaultLocales","internals","MagicBellProvider","settings","Provider","SettingsProviders","needsRemoteConfig","setConfig","setIsFetchingConfig","response","textTranslations","MagicBellChildrenWrapper","defaultInbox","MagicBell","defaultIsOpen","onNewNotification","onToggle","bellCounter","externalIsOpen","isControlled","internalIsOpen","toggleInternal","useToggle","handleToggle","useMagicBellEvent","PushNotificationsSubscriber","serviceWorkerPath","skipServiceWorkerRegistration","isPushAPISupported","isSupported","registerServiceWorker","error","subscribe","headerFooterProps","classicTheme","flatTheme"],"mappings":"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"}