export declare function getAuthHeaders(): {
    'x-magicbell-api-key': string;
    'x-magicbell-client-user-agent': string;
};
/** @deprecated */
export declare const pushEventAggregator: import("mitt").Emitter<Record<import("mitt").EventType, unknown>>;
export declare const eventAggregator: import("mitt").Emitter<Record<import("mitt").EventType, unknown>>;
export type EventSource = 'local' | 'remote';
/**
 * Publish events to the internal and public event emitter, based on the event source.
 *
 * @param event The name of the event.
 * @param data The data object to pass along with the event.
 * @param source The origin of the event, local for an action that's triggered by the user in the current tab, remote if it's an event from another instance that should be mirrored.
 */
export declare function emitEvent(event: string, data: unknown, source: EventSource): void;
/**
 * Publish an ably event to the push event emitter. If the push event contains
 * the ID of a notification, this is fetched before emitting the event.
 *
 * @param event The realtime event
 */
export declare function handleAblyEvent(event: {
    name: string;
    data: Record<string, unknown>;
}): Promise<boolean>;
