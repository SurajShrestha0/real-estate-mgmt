type SubscribeOptions = {
    token: string;
    project: string;
    serviceWorkerPath?: string;
    host?: string;
};
type AuthTokenOptions = {
    host?: string;
    apiKey: string;
} & ({
    userEmail: string;
    userHmac?: string;
} | {
    userExternalId: string;
    userHmac?: string;
});
export declare function isSupported(): boolean;
export declare function prefetchConfig(options: SubscribeOptions): Promise<void>;
export declare function registerServiceWorker({ path }?: {
    path?: string;
}): Promise<ServiceWorkerRegistration>;
/**
 * Checks if the current user has an active push subscription that is registered by MagicBell.
 */
export declare function isSubscribed(options: SubscribeOptions): Promise<boolean>;
/**
 * Request permission to send push notifications and post the subscription to the MagicBell API.
 */
export declare function subscribe(options: SubscribeOptions): Promise<void>;
export declare function getAuthToken(options: AuthTokenOptions): Promise<Pick<SubscribeOptions, "token" | "project" | "host">>;
export {};
