import { type FromSchema } from 'json-schema-to-ts';
import { type IterablePromise } from '../../client/method';
import { Resource } from '../../client/resource';
import { type RequestOptions } from '../../client/types';
import * as schemas from '../../schemas/users/notifications';
type ListUsersNotificationsResponse = FromSchema<typeof schemas.ListUsersNotificationsResponseSchema>;
type ListUsersNotificationsPayload = FromSchema<typeof schemas.ListUsersNotificationsPayloadSchema>;
export declare class UsersNotifications extends Resource {
    path: string;
    entity: string;
    /**
     * Fetch the notifications and deliveries for a user.
     *
     * @param userId - The user id is the MagicBell user id. Accepts a UUID
     * @param options - override client request options.
     * @returns
     **/
    list(userId: string, options?: RequestOptions): IterablePromise<ListUsersNotificationsResponse>;
    /**
     * Fetch the notifications and deliveries for a user.
     *
     * @param userId - The user id is the MagicBell user id. Accepts a UUID
     * @param data
     * @param options - override client request options.
     * @returns
     **/
    list(userId: string, data: ListUsersNotificationsPayload, options?: RequestOptions): IterablePromise<ListUsersNotificationsResponse>;
}
export {};
