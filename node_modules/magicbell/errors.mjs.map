{"version":3,"file":"errors.mjs","sources":["../src/client/error.ts"],"sourcesContent":["'use strict';\n\nexport function createError(rawError: ErrorConfig) {\n  for (const field of ['code', 'type', 'status']) {\n    switch (rawError[field]) {\n      case 'user_identifier_not_provided':\n        return new AuthenticationError(rawError);\n      case 'invalid_request_error':\n        return new InvalidRequestError(rawError);\n      case 'api_error':\n        return new APIError(rawError);\n      case 'authentication_error':\n        return new AuthenticationError(rawError);\n      case 'rate_limit_error':\n        return new RateLimitError(rawError);\n      case 'idempotency_error':\n        return new IdempotencyError(rawError);\n      case 404:\n        return new NotFoundError(rawError);\n      case 422:\n        return new UserInputError(rawError);\n    }\n  }\n\n  return new UnknownError(rawError);\n}\n\ntype ErrorConfig = {\n  name: string;\n  type?: string;\n  code?: string;\n  docs_url?: string;\n  help_link?: string;\n  status?: number;\n  statusText?: string;\n  responseBody?: unknown;\n  message: string;\n  suggestion?: string;\n};\n\n/**\n * BaseError is the base error from which all other more specific errors derive.\n * Specifically for errors returned from REST API.\n */\nexport class MagicBellError extends Error {\n  /**\n   * The name of the error.\n   */\n  name: string;\n  /**\n   * The error message returned by the REST API.\n   */\n  message: string;\n  /**\n   * The type of the error.\n   */\n  type?: string;\n  /**\n   * The URL to the documentation for the error.\n   */\n  docsUrl?: string;\n  /**\n   * The error code returned by the REST API.\n   */\n  code?: string;\n  /**\n   * The HTTP status code returned by the REST API.\n   */\n  status?: number;\n  /**\n   * The HTTP status text returned by the REST API.\n   */\n  statusText?: string;\n  /**\n   * A suggestion on how to fix the error.\n   */\n  suggestion?: string;\n  /**\n   * The raw response body returned by the REST API.\n   */\n  responseBody?: unknown;\n\n  /**\n   * @deprecated - use docsUrl instead\n   */\n  get docs_url() {\n    return this.docsUrl;\n  }\n\n  constructor(raw: ErrorConfig) {\n    super(raw.message);\n    this.type = this.constructor.name;\n    this.name = 'MagicBellError';\n    this.code = raw.code;\n    this.status = raw.status;\n    this.statusText = raw.statusText;\n    this.responseBody = raw.responseBody;\n    this.message = raw.message;\n    this.suggestion = raw.suggestion;\n    this.docsUrl = raw.docs_url || raw.help_link;\n  }\n}\n\nexport class InvalidRequestError extends MagicBellError {}\nexport class UserInputError extends MagicBellError {}\nexport class APIError extends MagicBellError {}\nexport class AuthenticationError extends MagicBellError {}\nexport class PermissionError extends MagicBellError {}\nexport class RateLimitError extends MagicBellError {}\nexport class ConnectionError extends MagicBellError {}\nexport class IdempotencyError extends MagicBellError {}\nexport class UnknownError extends MagicBellError {}\nexport class NotFoundError extends MagicBellError {}\n"],"names":[],"mappings":";;;;;;AA4CO,MAAM,uBAAuB,MAAM;AAAA,EA6CxC,YAAY,KAAkB;AAC5B,UAAM,IAAI,OAAO;AA1CnB;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAIA;AAWO,SAAA,OAAO,KAAK,YAAY;AAC7B,SAAK,OAAO;AACZ,SAAK,OAAO,IAAI;AAChB,SAAK,SAAS,IAAI;AAClB,SAAK,aAAa,IAAI;AACtB,SAAK,eAAe,IAAI;AACxB,SAAK,UAAU,IAAI;AACnB,SAAK,aAAa,IAAI;AACjB,SAAA,UAAU,IAAI,YAAY,IAAI;AAAA,EACrC;AAAA,EAfA,IAAI,WAAW;AACb,WAAO,KAAK;AAAA,EACd;AAcF;AAEO,MAAM,4BAA4B,eAAe;AAAC;AAClD,MAAM,uBAAuB,eAAe;AAAC;AAC7C,MAAM,iBAAiB,eAAe;AAAC;AACvC,MAAM,4BAA4B,eAAe;AAAC;AAClD,MAAM,wBAAwB,eAAe;AAAC;AAC9C,MAAM,uBAAuB,eAAe;AAAC;AAC7C,MAAM,wBAAwB,eAAe;AAAC;AAC9C,MAAM,yBAAyB,eAAe;AAAC;AAC/C,MAAM,qBAAqB,eAAe;AAAC;AAC3C,MAAM,sBAAsB,eAAe;AAAC;"}