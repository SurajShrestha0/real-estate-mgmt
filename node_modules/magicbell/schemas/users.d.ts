export declare const CreateUsersResponseSchema: {
    readonly title: "CreateUsersResponseSchema";
    readonly type: "object";
    readonly additionalProperties: false;
    readonly properties: {
        readonly id: {
            readonly type: "string";
            readonly description: "The unique id for this user.";
            readonly readOnly: true;
        };
        readonly external_id: {
            readonly type: "string";
            readonly description: "A unique string that MagicBell can utilize to identify the user uniquely. We recommend setting this attribute to the ID of the user in your database. Provide the external id if the user's email is unavailable.";
            readonly maxLength: 255;
            readonly nullable: true;
        };
        readonly email: {
            readonly type: "string";
            readonly description: "The user's email.";
            readonly maxLength: 255;
            readonly nullable: true;
        };
        readonly first_name: {
            readonly type: "string";
            readonly description: "The user's first name.";
            readonly maxLength: 50;
            readonly nullable: true;
        };
        readonly last_name: {
            readonly type: "string";
            readonly description: "The user's last name.";
            readonly maxLength: 50;
            readonly nullable: true;
        };
        readonly custom_attributes: {
            readonly type: "object";
            readonly description: "Any customer attributes that you'd like to associate with the user. You may want to use these attributes later when writing email templates, for example.";
            readonly additionalProperties: true;
        };
        readonly phone_numbers: {
            readonly type: "array";
            readonly description: "An array of phone numbers to use for sending SMS notifications.";
            readonly maxItems: 50;
            readonly items: {
                readonly type: "string";
            };
        };
    };
};
export declare const CreateUsersPayloadSchema: {
    readonly title: "CreateUsersPayloadSchema";
    readonly type: "object";
    readonly additionalProperties: false;
    readonly properties: {
        readonly external_id: {
            readonly type: "string";
            readonly description: "A unique string that MagicBell can utilize to identify the user uniquely. We recommend setting this attribute to the ID of the user in your database. Provide the external id if the user's email is unavailable.";
            readonly maxLength: 255;
            readonly nullable: true;
        };
        readonly email: {
            readonly type: "string";
            readonly description: "The user's email.";
            readonly maxLength: 255;
            readonly nullable: true;
        };
        readonly first_name: {
            readonly type: "string";
            readonly description: "The user's first name.";
            readonly maxLength: 50;
            readonly nullable: true;
        };
        readonly last_name: {
            readonly type: "string";
            readonly description: "The user's last name.";
            readonly maxLength: 50;
            readonly nullable: true;
        };
        readonly custom_attributes: {
            readonly type: "object";
            readonly description: "Any customer attributes that you'd like to associate with the user. You may want to use these attributes later when writing email templates, for example.";
            readonly additionalProperties: true;
        };
        readonly phone_numbers: {
            readonly type: "array";
            readonly description: "An array of phone numbers to use for sending SMS notifications.";
            readonly maxItems: 50;
            readonly items: {
                readonly type: "string";
            };
        };
    };
};
export declare const ListUsersResponseSchema: {
    readonly title: "ListUsersResponseSchema";
    readonly type: "object";
    readonly required: readonly ["current_page", "per_page", "users"];
    readonly properties: {
        readonly per_page: {
            readonly type: "integer";
            readonly description: "Number of entities per page.";
            readonly readOnly: true;
        };
        readonly current_page: {
            readonly type: "integer";
            readonly description: "Number of the page returned.";
            readonly readOnly: true;
        };
        readonly users: {
            readonly type: "array";
            readonly items: {
                readonly type: "object";
                readonly additionalProperties: false;
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly description: "The unique id for this user.";
                        readonly readOnly: true;
                    };
                    readonly external_id: {
                        readonly type: "string";
                        readonly description: "A unique string that MagicBell can utilize to identify the user uniquely. We recommend setting this attribute to the ID of the user in your database. Provide the external id if the user's email is unavailable.";
                        readonly maxLength: 255;
                        readonly nullable: true;
                    };
                    readonly email: {
                        readonly type: "string";
                        readonly description: "The user's email.";
                        readonly maxLength: 255;
                        readonly nullable: true;
                    };
                    readonly first_name: {
                        readonly type: "string";
                        readonly description: "The user's first name.";
                        readonly maxLength: 50;
                        readonly nullable: true;
                    };
                    readonly last_name: {
                        readonly type: "string";
                        readonly description: "The user's last name.";
                        readonly maxLength: 50;
                        readonly nullable: true;
                    };
                    readonly custom_attributes: {
                        readonly type: "object";
                        readonly description: "Any customer attributes that you'd like to associate with the user. You may want to use these attributes later when writing email templates, for example.";
                        readonly additionalProperties: true;
                    };
                    readonly phone_numbers: {
                        readonly type: "array";
                        readonly description: "An array of phone numbers to use for sending SMS notifications.";
                        readonly maxItems: 50;
                        readonly items: {
                            readonly type: "string";
                        };
                    };
                };
            };
        };
    };
};
export declare const ListUsersPayloadSchema: {
    readonly title: "ListUsersPayloadSchema";
    readonly type: "object";
    readonly properties: {
        readonly page: {
            readonly title: "page";
            readonly description: "The page number of the paginated response. Defaults to 1.";
            readonly type: "integer";
        };
        readonly per_page: {
            readonly title: "per_page";
            readonly description: "The number of items per page. Defaults to 20.";
            readonly type: "integer";
        };
        readonly 'last_seen_at:before': {
            readonly title: "last_seen_at:before";
            readonly description: "Fetch users seen before the specified `last_seen_at` timestamp. Please send it in RFC3339 format";
            readonly type: "string";
        };
        readonly 'last_seen_at:after': {
            readonly title: "last_seen_at:after";
            readonly description: "Fetch users seen after the specified `last_seen_at` timestamp. Please send it in RFC3339 format";
            readonly type: "string";
        };
        readonly 'last_notified_at:before': {
            readonly title: "last_notified_at:before";
            readonly description: "Fetch users last notified before the specified `last_notified_at` timestamp. Please send it in RFC3339 format";
            readonly type: "string";
        };
        readonly 'last_notified_at:after': {
            readonly title: "last_notified_at:after";
            readonly description: "Fetch users last notified after the specified `last_notified_at` timestamp. Please send it in RFC3339 format";
            readonly type: "string";
        };
        readonly order_by: {
            readonly title: "order_by";
            readonly description: "Use it to order the returned list of users. Defaults to `created_at,DESC`";
            readonly type: "string";
            readonly enum: readonly ["created_at,ASC", "created_at,DESC", "last_seen_at,ASC", "last_seen_at,DESC", "last_notified_at,ASC", "last_notified_at,DESC"];
        };
    };
    readonly additionalProperties: false;
    readonly required: readonly [];
};
export declare const GetUsersResponseSchema: {
    readonly title: "GetUsersResponseSchema";
    readonly type: "object";
    readonly additionalProperties: false;
    readonly properties: {
        readonly id: {
            readonly type: "string";
            readonly description: "The unique id for this user.";
            readonly readOnly: true;
        };
        readonly external_id: {
            readonly type: "string";
            readonly description: "A unique string that MagicBell can utilize to identify the user uniquely. We recommend setting this attribute to the ID of the user in your database. Provide the external id if the user's email is unavailable.";
            readonly maxLength: 255;
            readonly nullable: true;
        };
        readonly email: {
            readonly type: "string";
            readonly description: "The user's email.";
            readonly maxLength: 255;
            readonly nullable: true;
        };
        readonly first_name: {
            readonly type: "string";
            readonly description: "The user's first name.";
            readonly maxLength: 50;
            readonly nullable: true;
        };
        readonly last_name: {
            readonly type: "string";
            readonly description: "The user's last name.";
            readonly maxLength: 50;
            readonly nullable: true;
        };
        readonly custom_attributes: {
            readonly type: "object";
            readonly description: "Any customer attributes that you'd like to associate with the user. You may want to use these attributes later when writing email templates, for example.";
            readonly additionalProperties: true;
        };
        readonly phone_numbers: {
            readonly type: "array";
            readonly description: "An array of phone numbers to use for sending SMS notifications.";
            readonly maxItems: 50;
            readonly items: {
                readonly type: "string";
            };
        };
    };
};
export declare const UpdateUsersResponseSchema: {
    readonly title: "UpdateUsersResponseSchema";
    readonly type: "object";
    readonly additionalProperties: false;
    readonly properties: {
        readonly id: {
            readonly type: "string";
            readonly description: "The unique id for this user.";
            readonly readOnly: true;
        };
        readonly external_id: {
            readonly type: "string";
            readonly description: "A unique string that MagicBell can utilize to identify the user uniquely. We recommend setting this attribute to the ID of the user in your database. Provide the external id if the user's email is unavailable.";
            readonly maxLength: 255;
            readonly nullable: true;
        };
        readonly email: {
            readonly type: "string";
            readonly description: "The user's email.";
            readonly maxLength: 255;
            readonly nullable: true;
        };
        readonly first_name: {
            readonly type: "string";
            readonly description: "The user's first name.";
            readonly maxLength: 50;
            readonly nullable: true;
        };
        readonly last_name: {
            readonly type: "string";
            readonly description: "The user's last name.";
            readonly maxLength: 50;
            readonly nullable: true;
        };
        readonly custom_attributes: {
            readonly type: "object";
            readonly description: "Any customer attributes that you'd like to associate with the user. You may want to use these attributes later when writing email templates, for example.";
            readonly additionalProperties: true;
        };
        readonly phone_numbers: {
            readonly type: "array";
            readonly description: "An array of phone numbers to use for sending SMS notifications.";
            readonly maxItems: 50;
            readonly items: {
                readonly type: "string";
            };
        };
    };
};
export declare const UpdateUsersPayloadSchema: {
    readonly title: "UpdateUsersPayloadSchema";
    readonly type: "object";
    readonly additionalProperties: false;
    readonly properties: {
        readonly external_id: {
            readonly type: "string";
            readonly description: "A unique string that MagicBell can utilize to identify the user uniquely. We recommend setting this attribute to the ID of the user in your database. Provide the external id if the user's email is unavailable.";
            readonly maxLength: 255;
            readonly nullable: true;
        };
        readonly email: {
            readonly type: "string";
            readonly description: "The user's email.";
            readonly maxLength: 255;
            readonly nullable: true;
        };
        readonly first_name: {
            readonly type: "string";
            readonly description: "The user's first name.";
            readonly maxLength: 50;
            readonly nullable: true;
        };
        readonly last_name: {
            readonly type: "string";
            readonly description: "The user's last name.";
            readonly maxLength: 50;
            readonly nullable: true;
        };
        readonly custom_attributes: {
            readonly type: "object";
            readonly description: "Any customer attributes that you'd like to associate with the user. You may want to use these attributes later when writing email templates, for example.";
            readonly additionalProperties: true;
        };
        readonly phone_numbers: {
            readonly type: "array";
            readonly description: "An array of phone numbers to use for sending SMS notifications.";
            readonly maxItems: 50;
            readonly items: {
                readonly type: "string";
            };
        };
    };
};
export declare const UpdateByEmailUsersResponseSchema: {
    readonly title: "UpdateByEmailUsersResponseSchema";
    readonly type: "object";
    readonly additionalProperties: false;
    readonly properties: {
        readonly id: {
            readonly type: "string";
            readonly description: "The unique id for this user.";
            readonly readOnly: true;
        };
        readonly external_id: {
            readonly type: "string";
            readonly description: "A unique string that MagicBell can utilize to identify the user uniquely. We recommend setting this attribute to the ID of the user in your database. Provide the external id if the user's email is unavailable.";
            readonly maxLength: 255;
            readonly nullable: true;
        };
        readonly email: {
            readonly type: "string";
            readonly description: "The user's email.";
            readonly maxLength: 255;
            readonly nullable: true;
        };
        readonly first_name: {
            readonly type: "string";
            readonly description: "The user's first name.";
            readonly maxLength: 50;
            readonly nullable: true;
        };
        readonly last_name: {
            readonly type: "string";
            readonly description: "The user's last name.";
            readonly maxLength: 50;
            readonly nullable: true;
        };
        readonly custom_attributes: {
            readonly type: "object";
            readonly description: "Any customer attributes that you'd like to associate with the user. You may want to use these attributes later when writing email templates, for example.";
            readonly additionalProperties: true;
        };
        readonly phone_numbers: {
            readonly type: "array";
            readonly description: "An array of phone numbers to use for sending SMS notifications.";
            readonly maxItems: 50;
            readonly items: {
                readonly type: "string";
            };
        };
    };
};
export declare const UpdateByEmailUsersPayloadSchema: {
    readonly title: "UpdateByEmailUsersPayloadSchema";
    readonly type: "object";
    readonly additionalProperties: false;
    readonly properties: {
        readonly external_id: {
            readonly type: "string";
            readonly description: "A unique string that MagicBell can utilize to identify the user uniquely. We recommend setting this attribute to the ID of the user in your database. Provide the external id if the user's email is unavailable.";
            readonly maxLength: 255;
            readonly nullable: true;
        };
        readonly email: {
            readonly type: "string";
            readonly description: "The user's email.";
            readonly maxLength: 255;
            readonly nullable: true;
        };
        readonly first_name: {
            readonly type: "string";
            readonly description: "The user's first name.";
            readonly maxLength: 50;
            readonly nullable: true;
        };
        readonly last_name: {
            readonly type: "string";
            readonly description: "The user's last name.";
            readonly maxLength: 50;
            readonly nullable: true;
        };
        readonly custom_attributes: {
            readonly type: "object";
            readonly description: "Any customer attributes that you'd like to associate with the user. You may want to use these attributes later when writing email templates, for example.";
            readonly additionalProperties: true;
        };
        readonly phone_numbers: {
            readonly type: "array";
            readonly description: "An array of phone numbers to use for sending SMS notifications.";
            readonly maxItems: 50;
            readonly items: {
                readonly type: "string";
            };
        };
    };
};
export declare const UpdateByExternalIdUsersResponseSchema: {
    readonly title: "UpdateByExternalIdUsersResponseSchema";
    readonly type: "object";
    readonly additionalProperties: false;
    readonly properties: {
        readonly id: {
            readonly type: "string";
            readonly description: "The unique id for this user.";
            readonly readOnly: true;
        };
        readonly external_id: {
            readonly type: "string";
            readonly description: "A unique string that MagicBell can utilize to identify the user uniquely. We recommend setting this attribute to the ID of the user in your database. Provide the external id if the user's email is unavailable.";
            readonly maxLength: 255;
            readonly nullable: true;
        };
        readonly email: {
            readonly type: "string";
            readonly description: "The user's email.";
            readonly maxLength: 255;
            readonly nullable: true;
        };
        readonly first_name: {
            readonly type: "string";
            readonly description: "The user's first name.";
            readonly maxLength: 50;
            readonly nullable: true;
        };
        readonly last_name: {
            readonly type: "string";
            readonly description: "The user's last name.";
            readonly maxLength: 50;
            readonly nullable: true;
        };
        readonly custom_attributes: {
            readonly type: "object";
            readonly description: "Any customer attributes that you'd like to associate with the user. You may want to use these attributes later when writing email templates, for example.";
            readonly additionalProperties: true;
        };
        readonly phone_numbers: {
            readonly type: "array";
            readonly description: "An array of phone numbers to use for sending SMS notifications.";
            readonly maxItems: 50;
            readonly items: {
                readonly type: "string";
            };
        };
    };
};
export declare const UpdateByExternalIdUsersPayloadSchema: {
    readonly title: "UpdateByExternalIdUsersPayloadSchema";
    readonly type: "object";
    readonly additionalProperties: false;
    readonly properties: {
        readonly external_id: {
            readonly type: "string";
            readonly description: "A unique string that MagicBell can utilize to identify the user uniquely. We recommend setting this attribute to the ID of the user in your database. Provide the external id if the user's email is unavailable.";
            readonly maxLength: 255;
            readonly nullable: true;
        };
        readonly email: {
            readonly type: "string";
            readonly description: "The user's email.";
            readonly maxLength: 255;
            readonly nullable: true;
        };
        readonly first_name: {
            readonly type: "string";
            readonly description: "The user's first name.";
            readonly maxLength: 50;
            readonly nullable: true;
        };
        readonly last_name: {
            readonly type: "string";
            readonly description: "The user's last name.";
            readonly maxLength: 50;
            readonly nullable: true;
        };
        readonly custom_attributes: {
            readonly type: "object";
            readonly description: "Any customer attributes that you'd like to associate with the user. You may want to use these attributes later when writing email templates, for example.";
            readonly additionalProperties: true;
        };
        readonly phone_numbers: {
            readonly type: "array";
            readonly description: "An array of phone numbers to use for sending SMS notifications.";
            readonly maxItems: 50;
            readonly items: {
                readonly type: "string";
            };
        };
    };
};
