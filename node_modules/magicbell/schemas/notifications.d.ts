export declare const MarkAllReadNotificationsPayloadSchema: {
    readonly title: "MarkAllReadNotificationsPayloadSchema";
    readonly type: "object";
    readonly properties: {
        readonly archived: {
            readonly title: "archived";
            readonly description: "A filter on the notifications based on the archived state. Specify false to select unarchived notifications. Defaults to null.";
            readonly type: "boolean";
        };
        readonly read: {
            readonly title: "read";
            readonly description: "A filter on the notifications based on the read state. Specify false to select unread notifications. Defaults to null.";
            readonly type: "boolean";
        };
        readonly seen: {
            readonly title: "seen";
            readonly description: "A filter on the notifications based on the seen state. Specify false to select unseen notifications. Defaults to null.";
            readonly type: "boolean";
        };
        readonly categories: {
            readonly title: "categories";
            readonly description: "A filter on the notifications based on the category. If you want to get uncategorized notifications, use the \"uncategorized\" value.\nThe value can be either an array of strings or a comma-separated string.";
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
        readonly topics: {
            readonly title: "topics";
            readonly description: "A filter on the notifications based on the topic.";
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
    };
    readonly additionalProperties: false;
    readonly required: readonly [];
};
export declare const MarkAllSeenNotificationsPayloadSchema: {
    readonly title: "MarkAllSeenNotificationsPayloadSchema";
    readonly type: "object";
    readonly properties: {
        readonly archived: {
            readonly title: "archived";
            readonly description: "A filter on the notifications based on the archived state. Specify false to select unarchived notifications. Defaults to null.";
            readonly type: "boolean";
        };
        readonly read: {
            readonly title: "read";
            readonly description: "A filter on the notifications based on the read state. Specify false to select unread notifications. Defaults to null.";
            readonly type: "boolean";
        };
        readonly seen: {
            readonly title: "seen";
            readonly description: "A filter on the notifications based on the seen state. Specify false to select unseen notifications. Defaults to null.";
            readonly type: "boolean";
        };
        readonly categories: {
            readonly title: "categories";
            readonly description: "A filter on the notifications based on the category. If you want to get uncategorized notifications, use the \"uncategorized\" value.\nThe value can be either an array of strings or a comma-separated string.";
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
        readonly topics: {
            readonly title: "topics";
            readonly description: "A filter on the notifications based on the topic.";
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
    };
    readonly additionalProperties: false;
    readonly required: readonly [];
};
export declare const ListNotificationsResponseSchema: {
    readonly title: "ListNotificationsResponseSchema";
    readonly type: "object";
    readonly additionalProperties: false;
    readonly properties: {
        readonly project_id: {
            readonly type: "integer";
            readonly description: "ID of the MagicBell project these notifications belong to.";
            readonly readOnly: true;
        };
        readonly total: {
            readonly type: "integer";
            readonly description: "Total number of notifications for this user.";
            readonly readOnly: true;
        };
        readonly per_page: {
            readonly type: "integer";
            readonly description: "Number of notifications per page.";
            readonly readOnly: true;
        };
        readonly total_pages: {
            readonly type: "integer";
            readonly description: "Total number of pages.";
            readonly readOnly: true;
        };
        readonly current_page: {
            readonly type: "integer";
            readonly description: "Number of the page returned.";
            readonly readOnly: true;
        };
        readonly unseen_count: {
            readonly type: "integer";
            readonly description: "Number of unseen notifications. Any filters applied affect this number.";
            readonly readOnly: true;
        };
        readonly unread_count: {
            readonly type: "integer";
            readonly description: "Number of unread notifications. Any filters applied affect this number.";
            readonly readOnly: true;
        };
        readonly notifications: {
            readonly type: "array";
            readonly description: "List of all notifications in the current page";
            readonly items: {
                readonly type: "object";
                readonly required: readonly ["title", "recipient"];
                readonly additionalProperties: false;
                readonly properties: {
                    readonly id: {
                        readonly type: "string";
                        readonly description: "The unique id for this notification.";
                        readonly readOnly: true;
                    };
                    readonly title: {
                        readonly type: "string";
                        readonly description: "Title of the notification.";
                        readonly nullable: false;
                        readonly maxLength: 255;
                    };
                    readonly content: {
                        readonly type: "string";
                        readonly description: "Content of the notification. If you provide HTML content, the notification inbox will render it correctly. It should not exceed 4MB.";
                        readonly nullable: true;
                    };
                    readonly action_url: {
                        readonly type: "string";
                        readonly format: "uri";
                        readonly description: "A URL to redirect the user to when they click the notification in their notification inbox.";
                        readonly nullable: true;
                        readonly maxLength: 2048;
                    };
                    readonly category: {
                        readonly type: "string";
                        readonly description: "Category the notification belongs to. This is useful to allow users to set their preferences.";
                        readonly nullable: true;
                        readonly maxLength: 100;
                    };
                    readonly topic: {
                        readonly type: "string";
                        readonly description: "Topic the notification belongs to. This is useful to create threads.";
                        readonly nullable: true;
                        readonly maxLength: 100;
                    };
                    readonly custom_attributes: {
                        readonly type: "object";
                        readonly description: "Set of key-value pairs that you can attach to a notification, 6KB at maximum. It accepts objects for the value of a key.\n\nYou can use it to share data between channels or to render a custom UI.";
                        readonly nullable: true;
                        readonly additionalProperties: true;
                    };
                    readonly sent_at: {
                        readonly type: "number";
                    };
                    readonly seen_at: {
                        readonly type: "number";
                        readonly nullable: true;
                    };
                    readonly read_at: {
                        readonly type: "number";
                        readonly nullable: true;
                    };
                    readonly archived_at: {
                        readonly type: "number";
                        readonly nullable: true;
                    };
                    readonly recipient: {
                        readonly type: "object";
                        readonly additionalProperties: false;
                        readonly properties: {
                            readonly id: {
                                readonly type: "string";
                                readonly description: "The unique id for this user.";
                                readonly readOnly: true;
                            };
                            readonly external_id: {
                                readonly type: "string";
                                readonly description: "A unique string that MagicBell can utilize to identify the user uniquely. We recommend setting this attribute to the ID of the user in your database. Provide the external id if the user's email is unavailable.";
                                readonly maxLength: 255;
                                readonly nullable: true;
                            };
                            readonly email: {
                                readonly type: "string";
                                readonly description: "The user's email.";
                                readonly maxLength: 255;
                                readonly nullable: true;
                            };
                            readonly first_name: {
                                readonly type: "string";
                                readonly description: "The user's first name.";
                                readonly maxLength: 50;
                                readonly nullable: true;
                            };
                            readonly last_name: {
                                readonly type: "string";
                                readonly description: "The user's last name.";
                                readonly maxLength: 50;
                                readonly nullable: true;
                            };
                            readonly custom_attributes: {
                                readonly type: "object";
                                readonly description: "Any customer attributes that you'd like to associate with the user. You may want to use these attributes later when writing email templates, for example.";
                                readonly additionalProperties: true;
                            };
                            readonly phone_numbers: {
                                readonly type: "array";
                                readonly description: "An array of phone numbers to use for sending SMS notifications.";
                                readonly maxItems: 50;
                                readonly items: {
                                    readonly type: "string";
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
export declare const ListNotificationsPayloadSchema: {
    readonly title: "ListNotificationsPayloadSchema";
    readonly type: "object";
    readonly properties: {
        readonly per_page: {
            readonly title: "per_page";
            readonly description: "A limit on the number of notifications to be returned. It can range between 1 and 100, and the default is 15.";
            readonly type: "integer";
        };
        readonly page: {
            readonly title: "page";
            readonly description: "A parameter for use in pagination. Defaults to 1.";
            readonly type: "integer";
        };
        readonly read: {
            readonly title: "read";
            readonly description: "A filter on the notifications based on the read state. If false, only unread notifications will be returned. Defaults to null.";
            readonly type: "boolean";
        };
        readonly seen: {
            readonly title: "seen";
            readonly description: "A filter on the notifications based on the seen state. If false, only unseen notifications will be returned. Defaults to null.";
            readonly type: "boolean";
        };
        readonly archived: {
            readonly title: "archived";
            readonly description: "A filter on the notifications based on the archived state. If false, only unarchived notifications will be returned. Defaults to null.";
            readonly type: "boolean";
        };
        readonly categories: {
            readonly title: "categories";
            readonly description: "A filter on the notifications based on the category. If you want to get uncategorized notifications, use the \"uncategorized\" value.\nThe value can be either an array of strings or a comma-separated string.";
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
        readonly topics: {
            readonly title: "topics";
            readonly description: "A filter on the notifications based on the topic.";
            readonly type: "array";
            readonly items: {
                readonly type: "string";
            };
        };
    };
    readonly additionalProperties: false;
    readonly required: readonly [];
};
export declare const GetNotificationsResponseSchema: {
    readonly title: "GetNotificationsResponseSchema";
    readonly type: "object";
    readonly required: readonly ["title", "recipient"];
    readonly additionalProperties: false;
    readonly properties: {
        readonly id: {
            readonly type: "string";
            readonly description: "The unique id for this notification.";
            readonly readOnly: true;
        };
        readonly title: {
            readonly type: "string";
            readonly description: "Title of the notification.";
            readonly nullable: false;
            readonly maxLength: 255;
        };
        readonly content: {
            readonly type: "string";
            readonly description: "Content of the notification. If you provide HTML content, the notification inbox will render it correctly. It should not exceed 4MB.";
            readonly nullable: true;
        };
        readonly action_url: {
            readonly type: "string";
            readonly format: "uri";
            readonly description: "A URL to redirect the user to when they click the notification in their notification inbox.";
            readonly nullable: true;
            readonly maxLength: 2048;
        };
        readonly category: {
            readonly type: "string";
            readonly description: "Category the notification belongs to. This is useful to allow users to set their preferences.";
            readonly nullable: true;
            readonly maxLength: 100;
        };
        readonly topic: {
            readonly type: "string";
            readonly description: "Topic the notification belongs to. This is useful to create threads.";
            readonly nullable: true;
            readonly maxLength: 100;
        };
        readonly custom_attributes: {
            readonly type: "object";
            readonly description: "Set of key-value pairs that you can attach to a notification, 6KB at maximum. It accepts objects for the value of a key.\n\nYou can use it to share data between channels or to render a custom UI.";
            readonly nullable: true;
            readonly additionalProperties: true;
        };
        readonly sent_at: {
            readonly type: "number";
        };
        readonly seen_at: {
            readonly type: "number";
            readonly nullable: true;
        };
        readonly read_at: {
            readonly type: "number";
            readonly nullable: true;
        };
        readonly archived_at: {
            readonly type: "number";
            readonly nullable: true;
        };
        readonly recipient: {
            readonly type: "object";
            readonly additionalProperties: false;
            readonly properties: {
                readonly id: {
                    readonly type: "string";
                    readonly description: "The unique id for this user.";
                    readonly readOnly: true;
                };
                readonly external_id: {
                    readonly type: "string";
                    readonly description: "A unique string that MagicBell can utilize to identify the user uniquely. We recommend setting this attribute to the ID of the user in your database. Provide the external id if the user's email is unavailable.";
                    readonly maxLength: 255;
                    readonly nullable: true;
                };
                readonly email: {
                    readonly type: "string";
                    readonly description: "The user's email.";
                    readonly maxLength: 255;
                    readonly nullable: true;
                };
                readonly first_name: {
                    readonly type: "string";
                    readonly description: "The user's first name.";
                    readonly maxLength: 50;
                    readonly nullable: true;
                };
                readonly last_name: {
                    readonly type: "string";
                    readonly description: "The user's last name.";
                    readonly maxLength: 50;
                    readonly nullable: true;
                };
                readonly custom_attributes: {
                    readonly type: "object";
                    readonly description: "Any customer attributes that you'd like to associate with the user. You may want to use these attributes later when writing email templates, for example.";
                    readonly additionalProperties: true;
                };
                readonly phone_numbers: {
                    readonly type: "array";
                    readonly description: "An array of phone numbers to use for sending SMS notifications.";
                    readonly maxItems: 50;
                    readonly items: {
                        readonly type: "string";
                    };
                };
            };
        };
    };
};
